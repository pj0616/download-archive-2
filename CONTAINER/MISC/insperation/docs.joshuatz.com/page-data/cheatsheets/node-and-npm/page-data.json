{
  "componentChunkName": "component---src-templates-directory-index-js",
  "path": "/cheatsheets/node-and-npm",
  "result": {
    "pageContext": {
      "slug": "cheatsheets/node-and-npm",
      "hasIndex": false,
      "meta": {
        "id": "ed7d036d-cd72-5386-a3a7-3f5ebcdef70c",
        "name": "node-and-npm",
        "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm",
        "relativePath": "md/cheatsheets/node-and-npm",
        "children": {
          "dirs": [],
          "md": [
            {
              "id": "c7d2f377-4031-5365-a4bd-b11e581d1d39",
              "fileAbsolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/express-js.md",
              "html": "<h2 id=\"great-cheatsheets\" style=\"position:relative;\"><a href=\"#great-cheatsheets\" aria-label=\"great cheatsheets permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Great cheatsheets</h2>\n<ul>\n<li><a href=\"https://devhints.io/express\" target=\"_blank\" rel=\"nofollow noopener\">devhints.io</a></li>\n<li><a href=\"https://github.com/azat-co/cheatsheets/tree/master/express4\" target=\"_blank\" rel=\"nofollow noopener\">azat-co</a></li>\n<li><a href=\"https://flaviocopes.com/express-request-parameters/\" target=\"_blank\" rel=\"nofollow noopener\">flaviocopes - params</a></li>\n<li><a href=\"https://alligator.io/nodejs/req-object-in-expressjs/\" target=\"_blank\" rel=\"nofollow noopener\">alligator.io - req object</a></li>\n</ul>\n<h2 id=\"quick-ref-table\" style=\"position:relative;\"><a href=\"#quick-ref-table\" aria-label=\"quick ref table permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Quick Ref Table</h2>\n<table>\n<thead>\n<tr>\n<th>Side</th>\n<th>Thing</th>\n<th>Description</th>\n<th>Relev type sig</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Request</td>\n<td><code>req.params</code></td>\n<td>Captures <strong><em>named</em></strong> params, made explicit in route signature.</td>\n<td><code>{[index: string]: string | undefined}</code></td>\n</tr>\n<tr>\n<td>Request</td>\n<td><code>req.query</code></td>\n<td>Captures QueryString key-pair vals.</td>\n<td><code>{[index: string]: string | undefined}</code></td>\n</tr>\n<tr>\n<td>Request</td>\n<td><code>req.body</code></td>\n<td>Captures body payload key-pairs<br><br>Requires body parsing middleware</td>\n<td><code>{[index: string]: any}</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"how-do-i\" style=\"position:relative;\"><a href=\"#how-do-i\" aria-label=\"how do i permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>How do I...</h2>\n<ul>\n<li>\n<p>Capture variable through route?</p>\n<ul>\n<li>\n<p>Use <code>:var</code> syntax in route, then access through injected <code>req.params</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users/:userId'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>Or through actual request payload, with <code>req.body</code> (if using <code>body-parser</code>)</li>\n<li>Or through query params with <code>req.query.{queryParam}</code></li>\n</ul>\n</li>\n<li>\n<p>Inject a variable into the route?</p>\n<ul>\n<li>You probably want to use <a href=\"https://expressjs.com/en/guide/writing-middleware.html\" target=\"_blank\" rel=\"nofollow noopener\">middleware</a></li>\n<li>Actually very easy to write your own with just a few lines of code...</li>\n</ul>\n</li>\n<li>\n<p>Capture a parameter and check if it was used in the request?</p>\n<ul>\n<li>\n<p>GET (QueryString)</p>\n<ul>\n<li>Use <code>req.query</code>, which returns object of key/pair values corresponding to querystring.</li>\n<li>Check for valid value through standard JS logic; e.g., if you are expecting a string for <code>/?name={name}</code>, maybe do <code>!!req.query.name</code></li>\n</ul>\n</li>\n<li>\n<p>POST (Body)</p>\n<ul>\n<li>Basically same as GET, but use <code>req.body</code>, to access POST body params (assuming you switch to body with POST)</li>\n<li>Requires <em>body-parsing middleware</em></li>\n</ul>\n</li>\n<li>\n<p>Named param in route</p>\n<ul>\n<li>If you are capturing parameters <em>explicitly</em> as part of the route, you can use <code>req.params</code> to get the captured value</li>\n<li>Example, if route is <code>/book/:id</code>, you can get ID through <code>req.params.id</code></li>\n</ul>\n</li>\n<li>\n<p><strong><em>ALL</em></strong></p>\n<ul>\n<li>If you want to accept the same parameter, and allow it to be passed via any of the three methods (QueryString, Body, or Named Params), that is a little trickier</li>\n<li>There used to be an API method for this, <code>req.param({name}, {defaultValue})</code>, but it <a href=\"https://github.com/expressjs/express/issues/2440\" target=\"_blank\" rel=\"nofollow noopener\">was deprecated</a>.</li>\n<li>If you really need this, you could easily write your own wrapper method to check all three inputs and validate, and/or take a look at the original code, <a href=\"https://github.com/expressjs/express/blob/dee9fbbbda2f2483c657cf912f68db1a5ba1fcac/lib/request.js#L203\" target=\"_blank\" rel=\"nofollow noopener\">here</a>.</li>\n<li><a href=\"https://stackoverflow.com/a/28949933/11447682\" target=\"_blank\" rel=\"nofollow noopener\">Relevant S/O thread</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"param-types\" style=\"position:relative;\"><a href=\"#param-types\" aria-label=\"param types permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Param types</h2>\n<p>The built-in query string parser in Express does <em>not</em> infer types. For example, you might be tempted to think that if your request looks like <code>/?name=joe&#x26;age=13</code>, then <code>req.query.name</code> would be typeof <code>string</code>, and <code>req.query.age</code> would be typeof <code>number</code>. This is wrong. They are <em>all</em> inferred as strings.</p>\n<p>In addition, since <code>req.query</code> is an object, if you try to query a param that was not provided, you will get back <code>undefined</code>, not an empty string.</p>\n<blockquote>\n<p>All of the above is also true for <code>req.params</code>, but <strong><em>not</em></strong> for <code>req.body</code>, since if JSON is passed via request, then the types are preserved without any special parsing needed</p>\n</blockquote>\n<h2 id=\"common-issues\" style=\"position:relative;\"><a href=\"#common-issues\" aria-label=\"common issues permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Common Issues</h2>\n<ul>\n<li>\n<p><code>ERR_HTTP_HEADERS_SENT</code></p>\n<ul>\n<li>This indicates that you are basically trying to send a response back multiple times, or trying to set headers on a response after it has already been sent</li>\n<li>\n<p>A very common reason for this is forgetting to <code>return</code> after sending a response, so your code continues and tries to send a second response.</p>\n<ul>\n<li>Example: <a href=\"https://github.com/expressjs/express/issues/4060\" target=\"_blank\" rel=\"nofollow noopener\">express/issues/4060</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>BadRequestError: request aborted</code></p>\n<ul>\n<li>This is kind of a generic error, indicating that something interrupted the process of reading in the request</li>\n<li>Is likely to happen with the <code>body-parser</code> plugin</li>\n<li>\n<p>I personally hit this with mismatched <code>Content-Length</code> headers - where this error will throw if I send a request with an explicit <code>Content-Length</code> header that doesn't match the body size</p>\n<ul>\n<li>Easy to accidentally do this if you are cloning Postman requests</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
              "fields": {
                "title": "Express JS Notes",
                "slug": "/cheatsheets/node-and-npm/express-js/",
                "modifiedStampMs": 1603719393000,
                "createdStampMs": 1603719296000
              },
              "parent": {
                "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/express-js.md",
                "relativePath": "cheatsheets/node-and-npm/express-js.md",
                "base": "express-js.md",
                "name": "express-js"
              }
            },
            {
              "id": "91aab0f1-cb0f-534a-843e-73025f0be7d7",
              "fileAbsolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/node-general.md",
              "html": "<h2 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Resources</h2>\n<table>\n<thead>\n<tr>\n<th>What &#x26; Link</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://nodejs.org\" target=\"_blank\" rel=\"nofollow noopener\">nodejs.org</a></td>\n<td>Official website</td>\n</tr>\n<tr>\n<td>--> <a href=\"https://nodejs.org/api/index.html\" target=\"_blank\" rel=\"nofollow noopener\">Docs</a></td>\n<td>Official Docs</td>\n</tr>\n<tr>\n<td><a href=\"https://node.green/\" target=\"_blank\" rel=\"nofollow noopener\">node.green</a></td>\n<td>Compatibility table for NodeJS versions &#x26; JS versions</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"upgrading-node-itself-version\" style=\"position:relative;\"><a href=\"#upgrading-node-itself-version\" aria-label=\"upgrading node itself version permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Upgrading Node itself version</h2>\n<ul>\n<li>\n<p>On Unix</p>\n<ul>\n<li>\n<p>Recommended way is to use \"N\"</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Just needed once\nnpm install -g n\n# Now upgrade\nsudo n stable</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>On windows</p>\n<ul>\n<li>You can download <a href=\"https://nodejs.org/download/release/latest/\" target=\"_blank\" rel=\"nofollow noopener\">new installer</a> (MSI) and just install over current</li>\n<li>You can now use \"NVM\" (node version manager) for both Unix and <a href=\"https://github.com/coreybutler/nvm-windows\" target=\"_blank\" rel=\"nofollow noopener\">Windows</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"listing-versions\" style=\"position:relative;\"><a href=\"#listing-versions\" aria-label=\"listing versions permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Listing Versions</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node -v</code></pre></div>\n<blockquote>\n<p>Note: Node also has \"ABI\" version number. regular version number is like 10.##.# (LTS or non-lts). ABI version is regular integer</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node -p &quot;process.versions.modules&quot;</code></pre></div>\n<p>Or to get all version info:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node -p &quot;process.versions&quot;</code></pre></div>\n<h2 id=\"copying-to-the-clipboard\" style=\"position:relative;\"><a href=\"#copying-to-the-clipboard\" aria-label=\"copying to the clipboard permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Copying to the Clipboard</h2>\n<p>On Windows, here is a one-liner you can use:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>formattedHtml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In general, you are probably better off using the cross-OS package <a href=\"https://github.com/sindresorhus/clipboardy\" target=\"_blank\" rel=\"nofollow noopener\">clipboardy</a>.</p>\n<h2 id=\"paths-paths-paths\" style=\"position:relative;\"><a href=\"#paths-paths-paths\" aria-label=\"paths paths paths permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Paths, paths, paths</h2>\n<h3 id=\"current-directory\" style=\"position:relative;\"><a href=\"#current-directory\" aria-label=\"current directory permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Current directory</h3>\n<p>Often in Node scripts, you will need to reference something either by absolute or relative path, which might require knowing the full path of where the script is running.</p>\n<ul>\n<li>\n<p><code>__dirname</code> is a magic global that holds the string path of where the script resides - regardless from where it got called</p>\n<ul>\n<li>Does not have trailing slash</li>\n</ul>\n</li>\n<li><code>process.cwd()</code> returns the absolute path from where you invoked the script process - e.g. where you ran your command from</li>\n</ul>\n<h3 id=\"normalizing-paths-posix-vs-non-posix-aka-windows\" style=\"position:relative;\"><a href=\"#normalizing-paths-posix-vs-non-posix-aka-windows\" aria-label=\"normalizing paths posix vs non posix aka windows permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Normalizing paths (POSIX vs non-POSIX, aka Windows)</h3>\n<p>There is a really great native library for Node called <code>path</code> which has all kinds of methods for cleaning up and parsing paths. For example, if I want to create a path based on current directory, and then normalize it because I'm not sure which OS it is going to be running on, I might use something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myFilePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'../subdir/myFile.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>However, that only normalizes it for the OS you are on. If you want to force a standard, across any env, that takes more work. Quick hackish example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">currFilePath <span class=\"token operator\">=</span> currFilePath<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\/\\\\]{1,2}</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gm</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Read more about path, <a href=\"https://nodejs.org/api/path.html\" target=\"_blank\" rel=\"nofollow noopener\">here</a></p>\n<h2 id=\"get-list-of-node-flags\" style=\"position:relative;\"><a href=\"#get-list-of-node-flags\" aria-label=\"get list of node flags permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Get list of node flags</h2>\n<p><code>node --help</code></p>\n<p>Or <a href=\"https://nodejs.org/api/cli.html\" target=\"_blank\" rel=\"nofollow noopener\">here</a>.</p>\n<h2 id=\"using-the-node-cli--repl\" style=\"position:relative;\"><a href=\"#using-the-node-cli--repl\" aria-label=\"using the node cli  repl permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Using the Node CLI / REPL</h2>\n<p>You can use the <code>-e</code> argument to evaluate (eval) raw code string, or <code>-p</code> to both evaluate and \"print\" the output.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">node -p &quot;Math.min(24,2);&quot;</code></pre></div>\n<ul>\n<li>Results in \"2\" being printed to console.</li>\n</ul>\n<p>You can use the <code>-i</code> or <code>--interactive</code> flag to force <code>node</code> into REPL mode, even if stdin is not a terminal.</p>\n<ul>\n<li>This is important to note if you are trying to do something like recursively call <code>node</code> from within <code>node</code> via <code>child_process</code> or something like that (without the flag, it won't flush stdout until stdin is explicitly closed via <code>.end()</code>).</li>\n</ul>\n<h2 id=\"running-a-cli-command--system--bash--shell-commands-from-within-a-node-script\" style=\"position:relative;\"><a href=\"#running-a-cli-command--system--bash--shell-commands-from-within-a-node-script\" aria-label=\"running a cli command  system  bash  shell commands from within a node script permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Running a CLI command / system / bash / shell commands from within a node script</h2>\n<p><a href=\"https://stackoverflow.com/a/20643568/11447682\" target=\"_blank\" rel=\"nofollow noopener\">Recommended way</a> is with <code>child_process.exec</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> childProc <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> lsResults <span class=\"token operator\">=</span> childProc<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Note - exec returns buffer, so need to convert</span>\n<span class=\"token keyword\">var</span> lsResultsString <span class=\"token operator\">=</span> lsResults<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"calling-node-from-node-via-child_process\" style=\"position:relative;\"><a href=\"#calling-node-from-node-via-child_process\" aria-label=\"calling node from node via child_process permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Calling Node From Node Via Child_Process</h3>\n<p>This is a pretty specific scenario, but if you end up trying to call <code>node</code> from within <code>node</code>, via <code>exec</code> or <code>spawn</code>:</p>\n<ul>\n<li>You might want to call it with <code>--interactive</code> to force interactive mode (or call <code>stdin.end()</code> to flush at the end)</li>\n<li>You will need to send <code>EOL</code> characters after sending input to the CLI</li>\n<li>You might want to read <a href=\"https://github.com/nodejs/node/issues/2985#issuecomment-304613061\" target=\"_blank\" rel=\"nofollow noopener\">this comment</a> summarizing some approaches</li>\n</ul>\n<h3 id=\"changing-directory\" style=\"position:relative;\"><a href=\"#changing-directory\" aria-label=\"changing directory permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Changing directory</h3>\n<p>If you want to use <code>cd</code>, you need to use it with the command you want to run at the same time - e.g. a single line input to <code>child_process.exec</code>. Otherwise, the change of directory will not persist between commands. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> childProc <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Right:</span>\nchildProc<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cd foo &amp;&amp; ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Wrong:</span>\nchldProc<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cd foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchildProc<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>A recommended alternative is to pass the directory you want to execute the command in through the cwd (working directory) option:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> childProc <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchildProc<span class=\"token punctuation\">.</span><span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tcwd<span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"receiving-cli-arguments\" style=\"position:relative;\"><a href=\"#receiving-cli-arguments\" aria-label=\"receiving cli arguments permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Receiving CLI arguments</h2>\n<p>Access through <code>process.argv</code>. It should follow the following syntax:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 0 = path to nodejs - {string}</span>\n\t<span class=\"token keyword\">let</span> nodePath <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 1 = path to current executing file - {string}</span>\n\t<span class=\"token keyword\">let</span> currFile <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 2, 3, etc. = arguments</span>\n\t<span class=\"token keyword\">let</span> argsArr <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"detecting-when-a-script--file-is-being-run-via-cli\" style=\"position:relative;\"><a href=\"#detecting-when-a-script--file-is-being-run-via-cli\" aria-label=\"detecting when a script  file is being run via cli permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Detecting when a script / file is being run via CLI</h3>\n<p>There is a really handy trick for, in your code, to detect if it is being run directly versus imported by other code. You can use:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>require<span class=\"token punctuation\">.</span>main <span class=\"token operator\">===</span> module<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// This code will only execute if the file is called *directly* (e.g. via CLI)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Also, see <a href=\"https://nodejs.org/api/modules.html#modules_accessing_the_main_module\" target=\"_blank\" rel=\"nofollow noopener\">\"Accessing the main module\"</a></p>\n<h2 id=\"read-in-packagejson-within-script-file\" style=\"position:relative;\"><a href=\"#read-in-packagejson-within-script-file\" aria-label=\"read in packagejson within script file permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Read in package.json within script file</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> packageInfo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./package.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Version = '</span> <span class=\"token operator\">+</span> packageInfo<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>Also see <a href=\"../JS/js-modules.md#how-to-import-json\">\"JS Modules - How to Import JSON?\"</a></p>\n</blockquote>\n<h2 id=\"setting-globals\" style=\"position:relative;\"><a href=\"#setting-globals\" aria-label=\"setting globals permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Setting globals</h2>\n<p>There are not many <em>good</em> reasons to do this, but if for some reason you need to set a true global (not as in file global or top of closure global, but as in pollutes every file once imported), here is how:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">global<span class=\"token punctuation\">.</span>findMyAnywhere <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Or...</span>\nglobalThis<span class=\"token punctuation\">.</span>findMyAnywhere <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://stackabuse.com/using-global-variables-in-node-js/\" target=\"_blank\" rel=\"nofollow noopener\">Details</a></p>\n<h2 id=\"console-eof--processstdinonend\" style=\"position:relative;\"><a href=\"#console-eof--processstdinonend\" aria-label=\"console eof  processstdinonend permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Console EOF / process.stdin.on('end')</h2>\n<p>On Unix, pressing CTRL+D usually results in the system returning an EOF (<em>end-of-file</em>) to whatever is listening to the terminal. In node, you often see this listened to as:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Do something</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>However, this flat out does not work on Windows. Futhermore, pressing CTRL+C, since it sends the exit command, does not give that listener a chance to execute. The workaround is to use the <a href=\"https://nodejs.org/api/process.html#process_signal_events\" target=\"_blank\" rel=\"nofollow noopener\">process signal event</a> <code>SIGINT</code> listener:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Redirect windows CTRL+C to stdin-end</span>\nprocess<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SIGINT'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Do whatever you want here - finish up stuff, etc.</span>\n\t<span class=\"token comment\">// ...</span>\n\t<span class=\"token comment\">// Emit EOF / end event</span>\n\t<span class=\"token comment\">// https://nodejs.org/api/stream.html#stream_event_end</span>\n\tprocess<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"debugging-profiling-etc\" style=\"position:relative;\"><a href=\"#debugging-profiling-etc\" aria-label=\"debugging profiling etc permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Debugging, profiling, etc.</h2>\n<p><a href=\"https://stackoverflow.com/a/16512303/11447682\" target=\"_blank\" rel=\"nofollow noopener\">This is a great answer on S/O</a> that lists a bunch of commonly used tools for debugging, profiling, and more.</p>\n<h3 id=\"debugging\" style=\"position:relative;\"><a href=\"#debugging\" aria-label=\"debugging permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Debugging</h3>\n<p>Call <code>node --inspect-brk {nodeScriptFilePath} {args}</code></p>\n<blockquote>\n<p><code>node --inspect</code> is the same as above, but without breaking first</p>\n</blockquote>\n<p>Make sure you either have auto-attach on in your IDE settings, or start a debug session before running.</p>\n<blockquote>\n<p>If you are using VSCode, you can also manually attach to running NodeJS processes, by using <code>Command Palette -> Attach to Node Process</code></p>\n</blockquote>\n<h3 id=\"profiling\" style=\"position:relative;\"><a href=\"#profiling\" aria-label=\"profiling permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Profiling</h3>\n<p>For a plug-n-play solution for analyzing performance, check out <a href=\"https://github.com/davidmarkclements/0x\" target=\"_blank\" rel=\"nofollow noopener\">0x</a>, or <a href=\"https://github.com/mapbox/flamebearer\" target=\"_blank\" rel=\"nofollow noopener\">flamebearer</a>.</p>\n<p><a href=\"https://clinicjs.org/\" target=\"_blank\" rel=\"nofollow noopener\">Clinic.js</a> is a nifty suite of profiling tools,, all wrapped into one easy to install and use package.</p>\n<h3 id=\"throwing-errors\" style=\"position:relative;\"><a href=\"#throwing-errors\" aria-label=\"throwing errors permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Throwing errors</h3>\n<p>The recommended way to throw errors in Node is with the explicit error constructor.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Computer says \"no\"...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Good read: <a href=\"https://flaviocopes.com/node-exceptions/\" target=\"_blank\" rel=\"nofollow noopener\">Flavio Copes - Node Exceptions</a></p>\n<hr>\n<h2 id=\"environment-variables\" style=\"position:relative;\"><a href=\"#environment-variables\" aria-label=\"environment variables permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Environment Variables</h2>\n<h3 id=\"reading-values\" style=\"position:relative;\"><a href=\"#reading-values\" aria-label=\"reading values permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Reading values</h3>\n<p>From your CLI, the fastest way to view your environment variables is <code>node -p process.env</code>.</p>\n<p>From within code that is running with NodeJS, you can easily access any environment variable by picking it off the <code>process</code> global variable object. It is super common to use this as a way to avoid putting credentials in code, like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myApiClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\tid<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_CLIENT_ID</span><span class=\"token punctuation\">,</span>\n\tsuperSecretPass<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_CLIENT_PASS</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"setting-values\" style=\"position:relative;\"><a href=\"#setting-values\" aria-label=\"setting values permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Setting values</h3>\n<p>There are multiple ways to set env values, with varying levels of setup required.</p>\n<h4 id=\"from-the-cli\" style=\"position:relative;\"><a href=\"#from-the-cli\" aria-label=\"from the cli permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>From the CLI</h4>\n<p>Since <code>process.env</code> is basically just a map of your OS's environment variables, setting values for it depends on your OS and even what CLI you use:</p>\n<ul>\n<li>BASH, or \"bash-like\" CLIs: <code>{KEY}={VAL}</code></li>\n<li>\n<p>Windows CMD: <code>SETX {KEY} \"{VAL}\"</code> (or, temporary, <code>SET</code> instead of <code>SETX</code>)</p>\n<ul>\n<li>Example: <code>SETX API_KEY \"123\"&#x26;&#x26; node -p process.env.API_KEY</code> ---> results in <code>123</code> printed to console</li>\n</ul>\n</li>\n<li>Windows PowerShell: <code>$env:{KEY}=\"{VAL}\"</code></li>\n<li>NodeJS REPL: <code>node -e \"process.env.{KEY} = {VAL}\"</code></li>\n</ul>\n<blockquote>\n<p>For all of the above options, be careful about quotes / escaping.</p>\n</blockquote>\n<h4 id=\"from-a-env-file\" style=\"position:relative;\"><a href=\"#from-a-env-file\" aria-label=\"from a env file permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>From a <code>.env</code> File</h4>\n<p>Since it can get tedious setting and checking variables from the command line, most devs prefer to keep these values stored in a file, and have Node read the values out when executing. This also has the added benefit of keeping those values out of your OS variables.</p>\n<p>However, unlike how it reads OS variables, mapping values from a file to process.env is <strong><em>not</em></strong> baked into Node, so you will need to use a dependency to add that ability. The most popular is probably <code>dotenv</code>.</p>\n<p>You can read <a href=\"https://www.npmjs.com/package/dotenv\" target=\"_blank\" rel=\"nofollow noopener\">the docs</a> for how to use it, but its pretty simple:</p>\n<ul>\n<li>\n<p>Add a <code>.env</code> file to the root of your project, with key pair values</p>\n<ul>\n<li>These shoule be written as <code>KEY=VAL</code></li>\n</ul>\n</li>\n<li>Run <code>npm install dotenv</code> - to add it as a dependency</li>\n<li>\n<p>Add <code>require('dotenv').config()</code> as early as possible in your code, which will cause <code>dotenv</code> to map the contents of the file to <code>process.env</code></p>\n<ul>\n<li>After this point, <code>process.env.MY_KEY</code> will contain the value defined in <code>.env</code> if you have the pair <code>MY_KEY={something}</code> in the file</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>WARNING: Be careful about sharing your <code>.env</code> file. If it contains \"secrets\" (API keys, credentials, etc.) you probably want to add it to your <code>.gitignore</code>, and create a <code>example.env</code> which contains the same keys as <code>.env</code>, but with empty values for a dev to fill in with their own credentials.</p>\n</blockquote>\n<h4 id=\"from-within-code\" style=\"position:relative;\"><a href=\"#from-within-code\" aria-label=\"from within code permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>From within Code</h4>\n<p>From within your code that is running on Node, you can override existing values, or set new ones, simply by treating <code>process.env</code> as a regular object. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'ABC123'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>Note: this only sets the value for Node's process and any child processes; this doesn't actually change your OS environment variable value after the process exits!</p>\n</blockquote>",
              "fields": {
                "title": "NodeJS General Notes",
                "slug": "/cheatsheets/node-and-npm/node-general/",
                "modifiedStampMs": 1604642120000,
                "createdStampMs": 1603568084000
              },
              "parent": {
                "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/node-general.md",
                "relativePath": "cheatsheets/node-and-npm/node-general.md",
                "base": "node-general.md",
                "name": "node-general"
              }
            },
            {
              "id": "8e52e498-0c5d-5376-80bb-2acc24d58fe7",
              "fileAbsolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/npm-general.md",
              "html": "<blockquote>\n<p>👉 You might also be interested in <a href=\"./node-general.md\">my NodeJS notes</a>, or <a href=\"./building-an-npm-package.md\">notes on building an NPM package</a>.</p>\n</blockquote>\n<h1 id=\"upgrading-npm-itself\" style=\"position:relative;\"><a href=\"#upgrading-npm-itself\" aria-label=\"upgrading npm itself permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Upgrading NPM itself</h1>\n<ul>\n<li>Check version with <code>npm -v</code></li>\n<li>\n<p>Upgrade depends on OS - <a href=\"https://docs.npmjs.com/try-the-latest-stable-version-of-npm\" target=\"_blank\" rel=\"nofollow noopener\">full details</a></p>\n<ul>\n<li>*nix - <code>npm install -g npm@latest</code> or <code>npm install -g npm@next</code></li>\n<li>\n<p>Windows: Use <a href=\"https://github.com/felixrieseberg/npm-windows-upgrade\" target=\"_blank\" rel=\"nofollow noopener\">this tool</a></p>\n<ul>\n<li><code>npm install --global --production npm-windows-upgrade</code></li>\n<li><code>npm-windows-upgrade --npm-version latest</code> or <code>npm-windows-upgrade</code></li>\n<li>\n<p>If any of the above fail:</p>\n<ul>\n<li>Make sure you are in elevated prompt</li>\n<li><code>Set-ExecutionPolicy Unrestricted -Scope CurrentUser -Force</code></li>\n<li>If still failing, you might need to upgrade Node - [link]<a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"nofollow noopener\">https://nodejs.org/en/download/</a>)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"finding-the-npm-source-directory\" style=\"position:relative;\"><a href=\"#finding-the-npm-source-directory\" aria-label=\"finding the npm source directory permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Finding the NPM source directory</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">where npm</code></pre></div>\n<h1 id=\"init\" style=\"position:relative;\"><a href=\"#init\" aria-label=\"init permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Init</h1>\n<p><code>npm init</code>, or without the step-by-step questions, <code>npm init -y</code></p>\n<h1 id=\"some-useful-install-flags---see-full-list-here\" style=\"position:relative;\"><a href=\"#some-useful-install-flags---see-full-list-here\" aria-label=\"some useful install flags   see full list here permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Some useful install flags - see full list <a href=\"https://docs.npmjs.com/cli/install\" target=\"_blank\" rel=\"nofollow noopener\">here</a></h1>\n<table>\n<thead>\n<tr>\n<th>Flag</th>\n<th>Full Flag</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-g</td>\n<td>--global</td>\n<td>Save globally instead of into local project</td>\n</tr>\n<tr>\n<td>NA</td>\n<td>--link</td>\n<td>Link globally installed packages into local project</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>--save-prod</td>\n<td>Save into <code>dependencies</code> section. <strong><em>Default</em></strong></td>\n</tr>\n<tr>\n<td>-D</td>\n<td>--save-dev</td>\n<td>Package will show in <code>devDependencies</code></td>\n</tr>\n<tr>\n<td>-O</td>\n<td>--save-optional</td>\n<td>Package will show in <code>optionalDependencies</code></td>\n</tr>\n<tr>\n<td>NA</td>\n<td>--no-save</td>\n<td>Does not save to <code>package.json</code> at all!</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"viewing-and-exploring-the-contents-of-an-npm-package\" style=\"position:relative;\"><a href=\"#viewing-and-exploring-the-contents-of-an-npm-package\" aria-label=\"viewing and exploring the contents of an npm package permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Viewing and Exploring the Contents of an NPM Package</h1>\n<p>Aside from installing locally and then manually exploring the files added to your computer under <code>node_modules</code>, you can also explore the contents of a published NPM package with some online tools:</p>\n<ul>\n<li>\n<p><a href=\"https://unpkg.com/\" target=\"_blank\" rel=\"nofollow noopener\">UNPKG</a></p>\n<ul>\n<li>\n<p>Sample Options:</p>\n<ul>\n<li><code>unpkg.com/:package@:version/:file</code> (specific file)</li>\n<li><code>unpkg.com/:package@:version/</code> (directory listing)</li>\n</ul>\n</li>\n<li>For example: <a href=\"https://unpkg.com/react/\" target=\"_blank\" rel=\"nofollow noopener\">unpkg.com/react/</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.runpkg.com\" target=\"_blank\" rel=\"nofollow noopener\">runpkg</a></p>\n<ul>\n<li>Similar options to UNPKG, and you should be able to just add <code>r</code> at the beginning of a <code>unpkg</code> URL to redirect</li>\n<li>Example: <a href=\"https://runpkg.com/react/\" target=\"_blank\" rel=\"nofollow noopener\">runpkg.com/react/</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"semver\" style=\"position:relative;\"><a href=\"#semver\" aria-label=\"semver permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Semver</h1>\n<ul>\n<li>Calculator and cheatsheet - <a href=\"https://semver.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener\">semver.npmjs.com</a></li>\n<li><a href=\"https://devhints.io/semver\" target=\"_blank\" rel=\"nofollow noopener\">Devhints cheatsheet</a></li>\n</ul>\n<h1 id=\"updating-release-versions\" style=\"position:relative;\"><a href=\"#updating-release-versions\" aria-label=\"updating release versions permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Updating release versions</h1>\n<p>You can use <code>npm version {semVerString}</code> to set a new version. This will update <code>package.json</code>, <code>package-lock.json</code>, and <code>npm-shrinkwrap.json</code>.</p>\n<p>A helpful thing to remember is that, without any other arguments, this does a lot of automatic stuff you might not want:</p>\n<ul>\n<li>\n<p>Adds a new git commit with automated message</p>\n<ul>\n<li>Use custom with <code>-m</code> arg</li>\n</ul>\n</li>\n<li>\n<p>Add a new git tag, and points it at the auto commit</p>\n<ul>\n<li>Use <code>--no-git-tag-version</code> to disable</li>\n</ul>\n</li>\n<li>Updates the npm files (as mentioned above)</li>\n<li>Runs <code>preversion</code>, <code>version</code> and <code>postversion</code> under <code>scripts</code>.</li>\n</ul>\n<h2 id=\"update-version-without-tagging-or-adding-commit\" style=\"position:relative;\"><a href=\"#update-version-without-tagging-or-adding-commit\" aria-label=\"update version without tagging or adding commit permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Update version without tagging OR adding commit</h2>\n<p>Use the <code>--no-git-tag-version</code> arg, or <code>git-tag-version=false</code></p>\n<h2 id=\"auto-version-bump\" style=\"position:relative;\"><a href=\"#auto-version-bump\" aria-label=\"auto version bump permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Auto version bump</h2>\n<p>If you don't want to manually type out a version string, you can just auto <em>bump</em> the version, so long as you are using a valid semVer in your npm files. Use <code>npm version {incrementTarget}</code> where <code>{incrementTarget}</code> is one of:</p>\n<ul>\n<li>major</li>\n<li>minor</li>\n<li>patch</li>\n<li>premajor</li>\n<li>preminor</li>\n<li>prepatch</li>\n<li>prerelease</li>\n</ul>\n<h1 id=\"including-the-lockfile\" style=\"position:relative;\"><a href=\"#including-the-lockfile\" aria-label=\"including the lockfile permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Including the Lockfile</h1>\n<p>A common question devs have about projects that use a package manager is \"should I commit the lockfile to version control?\". <em>In general</em>, <strong><em>yes</em></strong>, especially for apps.</p>\n<p>There are several good reasons to commit a lockfile:</p>\n<ul>\n<li>\n<p><strong>Reproducibility</strong>: A lockfile, as its name implies, <strong>locks</strong> the version of each dependency (and sub-dependency) to the <em>specific</em> version from your latest install command, even if your <code>package.json</code> has a loose semver range (like <code>*</code>, or <code>^#.#.#</code>)</p>\n<ul>\n<li>No more \"works on my machine\" arguments that are caused by <code>npm install</code> being run on different days and grabbing different dependencies</li>\n<li>You can be sure that your CI, local PC, and other devs all have the exact same version of all dependencies</li>\n</ul>\n</li>\n<li>\n<p><strong>Security</strong>: Although there are also some security risks with lockfiles themselves, used correctly and with care, there is some additional security afforded by their use; if you are locked to a good version of a package, and that author gets hacked and starts publishing a bad version, your build pipeline won't be affected unless somebody manually updates to that version and commits the lockfile.</p>\n<ul>\n<li>There are also multiple security tools and systems that can automatically scan lockfiles for known security issues; this is now baked into Github, for example.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Yarn does a great job of summarizing these benefits in <a href=\"https://classic.yarnpkg.com/blog/2016/11/24/lockfiles-for-all/\" target=\"_blank\" rel=\"nofollow noopener\">this article</a>.</p>\n</blockquote>\n<p>However, there is also a very specific argument against committing lockfiles, <strong><em>if</em></strong> <strong>you are building a NPM package</strong>. The reason being that, if your project is a package and is being installed as a dependency, <em>the lockfile is not considered</em>, <strong><em>only the package.json file is</em></strong>.</p>\n<p>The reason why this is problematic, is that you can actually end up with that \"works on my machine\" issue, but with an added false sense of security; when you are developing your package locally, the lockfile is respected and everything works with the exact versions you need, but when a project that <em>consumes</em> your package installs it as a <em>dependency</em>, it just grabs whatever matches your <code>package.json</code> semver settings, which might allow for a dependency version that breaks your code. Sindre Sorhus, who is one of the most prolific NPM package creators, summarizes the issue <a href=\"https://github.com/sindresorhus/ama/issues/479#issuecomment-310661514\" target=\"_blank\" rel=\"nofollow noopener\">here</a>.</p>\n<p>In these instances, it might be better to omit the lockfile, and instead very narrowly define the semver in your <code>package.json</code>, perhaps even specifying an exact version.</p>\n<h1 id=\"list-installed-packages\" style=\"position:relative;\"><a href=\"#list-installed-packages\" aria-label=\"list installed packages permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>List installed packages</h1>\n<blockquote>\n<p>Courtesy of <a href=\"https://gist.github.com/jkomyno/c8f2dcde466aa05c76da22226d9d3776#file-getglobalpackages-sh\" target=\"_blank\" rel=\"nofollow noopener\">jkomyno</a></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># NPM\nnpm list -g --depth 0\n\n# Yarn\nyarn global list</code></pre></div>\n<h2 id=\"find-the-binary-of-a-given-package\" style=\"position:relative;\"><a href=\"#find-the-binary-of-a-given-package\" aria-label=\"find the binary of a given package permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Find the binary of a given package</h2>\n<p>Many devs already know you can use <code>npx {packageName}</code> to run with a preference for using local binaries before downloading and executing a global install, but what about <em>locating</em> the actual binary path?</p>\n<ul>\n<li>\n<p>NPM</p>\n<ul>\n<li>\n<p>All local binaries (nearest bin dir) (echo path): <a href=\"https://docs.npmjs.com/cli/v6/commands/npm-bin\" target=\"_blank\" rel=\"nofollow noopener\"><code>npm bin</code></a></p>\n<ul>\n<li>Note: This is where npm <em>will</em> install binaries if called from the current working directory, not necessarily where they are <em>already</em> installed.</li>\n</ul>\n</li>\n<li>Specific binary: you can use <a href=\"https://stackoverflow.com/a/15157360/11447682\" target=\"_blank\" rel=\"nofollow noopener\">variable substitution with <code>npm bin</code></a> if you really need the path, otherwise <a href=\"https://stackoverflow.com/a/45164863/11447682\" target=\"_blank\" rel=\"nofollow noopener\">just use <code>npx</code></a></li>\n</ul>\n</li>\n<li>\n<p>Yarn</p>\n<ul>\n<li>Pretty similar to NPM (above)</li>\n<li>\n<p>All local binaries (echo path): <code>yarn bin</code></p>\n<ul>\n<li>This has the same disclaimer as <code>npm bin</code></li>\n</ul>\n</li>\n<li>Specific binary (echo path): <code>yarn bin {package}</code></li>\n<li>\n<p><em>Run</em> a specific binary: <code>yarn {package}</code></p>\n<ul>\n<li>Unlike npm, yarn does not require something like <code>npx</code> be used to run against a local command</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"find-top-level-package-that-is-using-another\" style=\"position:relative;\"><a href=\"#find-top-level-package-that-is-using-another\" aria-label=\"find top level package that is using another permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Find top level package that is using another</h2>\n<p>If we have package {top-level} that is using {sub-depend}, but we don't know that - all we know is that <em>one</em> of our top packages is using \"sub-depend\", we can find it out by using:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm ls {sub-dependency-name}</code></pre></div>\n<h1 id=\"list-versions\" style=\"position:relative;\"><a href=\"#list-versions\" aria-label=\"list versions permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>List versions</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm -version</code></pre></div>\n<h1 id=\"get-the-version-of-a-package\" style=\"position:relative;\"><a href=\"#get-the-version-of-a-package\" aria-label=\"get the version of a package permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Get the version of a package</h1>\n<h2 id=\"npm\" style=\"position:relative;\"><a href=\"#npm\" aria-label=\"npm permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>NPM</h2>\n<p><code>npm list {packageName}</code></p>\n<h2 id=\"yarn\" style=\"position:relative;\"><a href=\"#yarn\" aria-label=\"yarn permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Yarn</h2>\n<p><code>yarn list --pattern {packageNameOrPattern}</code>\nOr...\n<code>yarn list | grep {packageNameOrPattern}</code>\nOr...\n<code>yarn global list --pattern {packageNameOrPattern}</code></p>\n<h1 id=\"install-a-very-specific-version-of-a-package-from-cli\" style=\"position:relative;\"><a href=\"#install-a-very-specific-version-of-a-package-from-cli\" aria-label=\"install a very specific version of a package from cli permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Install a very specific version of a package (from CLI)</h1>\n<p>You can actually use similar syntax as a <code>package.json</code> file - e.g. <code>tslint@^5.0.0</code>.</p>\n<h1 id=\"updating--upgrading-packages-used-in-packagejson\" style=\"position:relative;\"><a href=\"#updating--upgrading-packages-used-in-packagejson\" aria-label=\"updating  upgrading packages used in packagejson permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Updating / upgrading packages used in package.json</h1>\n<ul>\n<li>\n<p>NPM</p>\n<ul>\n<li>You can use <code>npm update</code> to pull in updated packages (will also update your package-lock.json automatically)</li>\n<li>\n<p>You can use <code>npm outdated</code> to see what your <code>package.json</code> is requesting VS what is published</p>\n<ul>\n<li>Good to use this to double-check after running <code>npm update</code>, since <code>npm update</code> requests based on your <code>package.json</code> semver rules, not necessarily what is newest</li>\n</ul>\n</li>\n<li>\n<p>For upgrading to the absolute latest, ignoring <code>package.json</code>, there is no built-in command (unlike Yarn)</p>\n<ul>\n<li>\n<p>The easiest way to do it by hand, is to edit the <code>package.json</code> file to have <code>*</code> as the semver for any dependency you want to have updated to the latest, and then run <code>npm update</code> again.</p>\n<ul>\n<li>Since npm knowns <code>*</code> is invalid, it will update and then overwrite the entry</li>\n</ul>\n</li>\n<li>Another option is to call <code>npm install PACKAGE_NAME@latest</code> for each dependency you want updated</li>\n<li>\n<p>For an automated / interactive 3rd party solution, you could check out one of these:</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/npm-check-updates\" target=\"_blank\" rel=\"nofollow noopener\">https://www.npmjs.com/package/npm-check-updates</a> </li>\n<li><a href=\"https://www.npmjs.com/package/npm-check\" target=\"_blank\" rel=\"nofollow noopener\">https://www.npmjs.com/package/npm-check</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Yarn:</p>\n<ul>\n<li>Upgrade to latest <em>specified by package.json</em>: <code>yarn upgrade</code></li>\n<li>Same as above, but interactively: <code>yarn upgrade-interactive</code></li>\n<li>Upgrade to absolute latest, ignoring package.json (for example, major version bump): <code>yarn upgrade-interactive --latest</code></li>\n<li>\n<p>You can use <code>yarn outdated</code> to see what your <code>package.json</code> is requesting VS what is published</p>\n<ul>\n<li>See notes above on <code>npm outdated</code>, since this works similarly</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"installing-a-specific-version\" style=\"position:relative;\"><a href=\"#installing-a-specific-version\" aria-label=\"installing a specific version permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Installing a specific version</h2>\n<ul>\n<li>\n<p>NPM</p>\n<ul>\n<li><code>npm install {packageName}@{semVerPattern}</code></li>\n</ul>\n</li>\n<li>\n<p>Yarn</p>\n<ul>\n<li><code>yarn add {packageName}@{semVerPattern}</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"how-to-deal-with-nested-dependency-versions\" style=\"position:relative;\"><a href=\"#how-to-deal-with-nested-dependency-versions\" aria-label=\"how to deal with nested dependency versions permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>How to deal with nested dependency versions</h2>\n<p>A somewhat common issue is trying to force a direct dependency (listed under <code>dependencies</code> or <code>devDependencies</code> in package.json) to use a specific version of <strong><em>their</em></strong> dependency.</p>\n<p>This is not something you normally dictate - it is normally handled automatically by NPM or Yarn - but sometimes you might want to force a certain sub-dependency version due to a vulnerability; for example, if you use <code>my-dependency</code> which has a nested dependency of <code>my-sub-depend</code> locked at <code>v0.0.1</code>, which has a severe vulnerability patched in <code>v0.0.2</code>.</p>\n<p>There are multiple ways to approach this, and the best starting spot is <a href=\"https://stackoverflow.com/questions/15806152/how-do-i-override-nested-npm-dependency-versions\" target=\"_blank\" rel=\"nofollow noopener\">this</a> S/O Question.</p>\n<ul>\n<li>\n<p>NPM</p>\n<ul>\n<li>\n<p>Use <em>Shrinkwrap</em> file</p>\n<ol>\n<li>Run <code>npm shrinkwrap</code></li>\n<li>\n<p>Manually edit the auto-created <code>npm-shrinkwrap.json</code> file</p>\n<ul>\n<li>Use Semver targeting to force the new version you want</li>\n</ul>\n</li>\n<li>Run <code>npm install</code> again</li>\n</ol>\n</li>\n<li>\n<p>Use an automated solution, like <a href=\"https://www.npmjs.com/package/npm-force-resolutions\" target=\"_blank\" rel=\"nofollow noopener\"><code>npm-force-resolutions</code></a></p>\n<ul>\n<li>This lets you use the <code>package.json -> resolutions</code> approach, that natively works with Yarn (see below)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Yarn</p>\n<ul>\n<li>Yarn is way easier to use overrides with, in comparison to NPM</li>\n<li>\n<p>Just add <code>resolutions</code> object to <code>package.json</code> with overrides</p>\n<ul>\n<li><a href=\"https://classic.yarnpkg.com/en/docs/selective-version-resolutions/#toc-how-to-use-it\" target=\"_blank\" rel=\"nofollow noopener\">Example &#x26; instructions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"when-in-doubt-and-messed-up-beyond-repair\" style=\"position:relative;\"><a href=\"#when-in-doubt-and-messed-up-beyond-repair\" aria-label=\"when in doubt and messed up beyond repair permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>When in doubt and messed up beyond repair...</h1>\n<p><code>npm cache clean -force</code></p>\n<h1 id=\"when-really-messed-up\" style=\"position:relative;\"><a href=\"#when-really-messed-up\" aria-label=\"when really messed up permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>When REALLY messed up</h1>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">rm -rf node_modules\nnpm cache clean -force\nnpm install</code></pre></div>\n<h1 id=\"installing-peer-dependencies\" style=\"position:relative;\"><a href=\"#installing-peer-dependencies\" aria-label=\"installing peer dependencies permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Installing peer-dependencies</h1>\n<p>Many packages, especially lint configs, will require other dependencies (peer dependencies) but will not install them automatically. You could manually figure out what's needed (for example, by running <code>npm ls</code>) and manually install one by one, or use a tool like <code>install-peerdeps</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># See: https://www.npmjs.com/package/install-peerdeps#usage\n\n# NPM\nnpm install -g install-peerdeps\n\n# Yarn\nyarn global add install-peerdeps\n\ninstall-peerdeps --dev {package}\n# OR\ninstall-peerdeps {package}\n# OR\ninstall-peerdeps &lt;package&gt;[@&lt;version&gt;]</code></pre></div>\n<p>You can list peer dependencies needed by a package by using</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># NPM\nnpm info &quot;{package}&quot; peerDependencies</code></pre></div>\n<h1 id=\"using-global-modules--packages\" style=\"position:relative;\"><a href=\"#using-global-modules--packages\" aria-label=\"using global modules  packages permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Using global modules / packages</h1>\n<p>You can use globally installed packages by taking advantage of <code>link</code> - which basically just symlinks from the global folder to your project directory. Once something is installed globally, you can simply run <code>npm link {packageName}</code> in the directory where you want to be able to access it.</p>\n<blockquote>\n<p>WARNING: The much preferred way to do this is with <code>npx</code>, which will use your project's dependency first, if it has it.</p>\n</blockquote>\n<blockquote>\n<p>Currently, Yarn will allow linking of dev packages (e.g. <code>yarn link</code> in dev, <code>yarn link {name}</code> in test), but tends to have issues with globally installed versions (<a href=\"https://github.com/yarnpkg/yarn/issues/891\" target=\"_blank\" rel=\"nofollow noopener\">GH issue</a>).</p>\n</blockquote>\n<h1 id=\"npm-install-errors\" style=\"position:relative;\"><a href=\"#npm-install-errors\" aria-label=\"npm install errors permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>NPM Install Errors</h1>\n<h2 id=\"gyp-related-errors\" style=\"position:relative;\"><a href=\"#gyp-related-errors\" aria-label=\"gyp related errors permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>gyp related errors:</h2>\n<ul>\n<li>\n<p>\"No prebuilt binaries found\"</p>\n<ul>\n<li>\n<p>There is probably a dependency that was built using C++ or other codebase and is missing a prebuilt binary for your versions of node/ABI#. Check your ABI and compare against what is hosted as a prebuilt binary.</p>\n<ul>\n<li>\n<p>If you can't find a prebuilt to use, just build yourself (check dependency's package.json and .gyp for details). You will probably also need build tools installed, depending on OS:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --global --production windows-build-tools</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>General build errors (\"MSBuild\", etc)</p>\n<ul>\n<li>\n<p>Make sure that you have build tools installed (see above)</p>\n<ul>\n<li>\n<p>Make sure built-tools install WORKED</p>\n<ul>\n<li>Make sure to run as Admin</li>\n<li>Check log, and if necessary, manually run the installer it downloads</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>You can switch what version of MSVC you are targeting:</p>\n<ul>\n<li>For example: <code>npm config set msvs_version 2015 -g</code></li>\n</ul>\n</li>\n<li>\n<p>Try to get Node to use a prebuilt-binary instead of building from scratch</p>\n<ul>\n<li>\n<p>Check the log to see <em>why</em> node is trying to rebuild/build</p>\n<ul>\n<li>For example, is a firewall blocking the binary download?</li>\n<li>Some install scripts will let you specify a binary source URL</li>\n</ul>\n</li>\n<li>\n<p>A quick hack if you can find a pre-built binary to download, is to save it to the corresponding <code>npm-cache</code> folder, and then run <code>npm rebuild {packageName}</code> before trying to re-install.</p>\n<ul>\n<li>You should see <code>Cached binary found at ...</code> if this trick worked</li>\n<li>Found via <a href=\"https://github.com/sass/node-sass/issues/2133#issuecomment-487261704\" target=\"_blank\" rel=\"nofollow noopener\">this comment</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"list-tasks\" style=\"position:relative;\"><a href=\"#list-tasks\" aria-label=\"list tasks permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>List tasks</h1>\n<p><code>npm run</code></p>",
              "fields": {
                "title": "NPM Cheatsheet and Assorted Notes",
                "slug": "/cheatsheets/node-and-npm/npm-general/",
                "modifiedStampMs": 1605108044000,
                "createdStampMs": 1566892471000
              },
              "parent": {
                "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/npm-general.md",
                "relativePath": "cheatsheets/node-and-npm/npm-general.md",
                "base": "npm-general.md",
                "name": "npm-general"
              }
            },
            {
              "id": "ec5906b6-aeb4-54b4-a4b8-3ae5f660e0e9",
              "fileAbsolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/npm-node-cross-env-packages.md",
              "html": "<h2 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Resources</h2>\n<ul>\n<li><a href=\"./\">My Node / NPM Cheatsheets</a></li>\n<li><a href=\"https://blog.codecentric.de/en/2014/02/cross-platform-javascript/\" target=\"_blank\" rel=\"nofollow noopener\">https://blog.codecentric.de/en/2014/02/cross-platform-javascript/</a></li>\n<li><a href=\"https://www.intricatecloud.io/2020/02/creating-a-simple-npm-library-to-use-in-and-out-of-the-browser/\" target=\"_blank\" rel=\"nofollow noopener\">https://www.intricatecloud.io/2020/02/creating-a-simple-npm-library-to-use-in-and-out-of-the-browser/</a></li>\n<li>\n<p><a href=\"https://github.com/browserify/browserify\" target=\"_blank\" rel=\"nofollow noopener\">Browserify</a>:</p>\n<ul>\n<li><a href=\"http://blakeembrey.com/posts/2013-09-introduction-to-browserify\" target=\"_blank\" rel=\"nofollow noopener\">http://blakeembrey.com/posts/2013-09-introduction-to-browserify</a></li>\n<li><a href=\"https://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html\" target=\"_blank\" rel=\"nofollow noopener\">https://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html</a></li>\n</ul>\n</li>\n<li>Webpack: <a href=\"https://webpack.js.org/guides/author-libraries/\" target=\"_blank\" rel=\"nofollow noopener\">\"Authoring Libraries\" Guide</a></li>\n<li>\n<p>2ality: <a href=\"https://2ality.com/2017/04/setting-up-multi-platform-packages.html\" target=\"_blank\" rel=\"nofollow noopener\">\"Setting Up Multi-Platform NPM Packages\"</a></p>\n<ul>\n<li>Great guide (well-researched) on the role <code>package.json</code> fields can play in cross-env NPM package development</li>\n</ul>\n</li>\n<li>\n<p>@terabaud: <a href=\"https://dev.to/terabaud/i-created-and-my-first-typescript-library-and-published-it-on-npm-44c\" target=\"_blank\" rel=\"nofollow noopener\">My First TypeScript Library</a></p>\n<ul>\n<li>Really excellent walk-through</li>\n<li>Concise (👍), despite covering many topics; TS as source, targeting cross-environment distribution (Node + Browser), Rollup as a build tool, distribution, and more.</li>\n</ul>\n</li>\n<li>\n<p>Nolan Lawson: <a href=\"https://nolanlawson.com/2017/01/09/how-to-write-a-javascript-package-for-both-node-and-the-browser/\" target=\"_blank\" rel=\"nofollow noopener\">JavaScript Package for both Node and the Browser</a></p>\n<ul>\n<li>I like the advanced usage of rollup for string replacement in the build step</li>\n</ul>\n</li>\n<li>Ali Kamalizade: <a href=\"https://ali-dev.medium.com/how-to-publish-a-js-library-to-npm-with-rollup-typescript-8b51ede8f562\" target=\"_blank\" rel=\"nofollow noopener\">Publishing to NPM with Rollup &#x26; TypeScript</a></li>\n</ul>\n<h2 id=\"creating-cross-environment-npm-packages\" style=\"position:relative;\"><a href=\"#creating-cross-environment-npm-packages\" aria-label=\"creating cross environment npm packages permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Creating Cross-Environment NPM Packages</h2>\n<p>Splitting your code into separate packages is always an option, but what if you want to bundle and publish a single JS package that can be used for both Node.JS (backend) and the browser (frontend)? This is possible, but a little complicated and there are a few important things to note:</p>\n<h3 id=\"cross-environment-npm-packages---environment-detection\" style=\"position:relative;\"><a href=\"#cross-environment-npm-packages---environment-detection\" aria-label=\"cross environment npm packages   environment detection permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Cross-Environment NPM Packages - Environment Detection</h3>\n<p>One way to make sure that your code only uses what is available within its executing environment is to physically separate the code into logical files and bundle them separately for distribution - e.g. <code>src/helpers_node.js</code> &#x26; <code>src/helpers_web.js</code>.</p>\n<p>If this is not possible, or you have files that you want shared across environments, you need to build in environment detection code, so you don't try to do something like access <code>document.location</code> inside Node.JS, which would result in a fatal error.</p>\n<h4 id=\"cross-environment-npm-packages---how-to-detect-nodejs-vs-browser\" style=\"position:relative;\"><a href=\"#cross-environment-npm-packages---how-to-detect-nodejs-vs-browser\" aria-label=\"cross environment npm packages   how to detect nodejs vs browser permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Cross-Environment NPM Packages - How to Detect NodeJS vs Browser</h4>\n<p>You <em>could</em> roll your own method to detect if your code is executing inside Node vs the browser, or even <a href=\"https://stackoverflow.com/q/17575790/11447682\" target=\"_blank\" rel=\"nofollow noopener\">grab something off Stack Overflow</a>, but the easiest solution is to just use something like <a href=\"https://www.npmjs.com/package/process\" target=\"_blank\" rel=\"nofollow noopener\">the <code>process</code> package</a> - this exposes the <code>process</code> global to browser code, and sets <code>process.browser</code> to <code>true</code> in the browser, but <code>undefined</code> in Node.</p>\n<p>It does this by hooking into the <code>browser</code> field in the <code>package.json</code> file, so in reality, the use of this package is usually not left to you as a package developer, but to the developers of the bundler you are using:</p>\n<ul>\n<li>If you are using <code>Browserify</code> or <code>Webpack</code>, both of these will automatically set <code>process.browser</code> based on environment</li>\n<li>\n<p><code>Parcel</code> also supports this to some degree, although documented to a lesser extent; looks like it replaces specific keys with the value itself, so depending on <code>process.browser</code> works, but only when interacted with normally</p>\n<ul>\n<li>Doing something like <code>console.log(process)</code> will fail for the browser export, and so will <code>eval('process.browser')</code></li>\n<li>Normal usage, such as <code>if (process.browser) { ... }</code> works just fine though</li>\n</ul>\n</li>\n<li>\n<p>If you are using <code>Rollup</code>, you need to do some manual work to get <code>process.browser</code> working</p>\n<ul>\n<li>Using <code>@rollup/plugin-node-resolve</code>, with <code>browser: true</code>, and <code>rollup-plugin-node-builtins</code> + <code>rollup-plugin-node-globals</code>, should accomplish the task of exposing <code>process</code> as a cross-env global, and setting <code>process.browser</code> appropriately</li>\n<li>You could also (or alternatively), use <code>rollup-plugin-replace</code> to replace the string literla <code>'process.browser'</code> with a boolean value based on a config (see <a href=\"https://nolanlawson.com/2017/01/09/how-to-write-a-javascript-package-for-both-node-and-the-browser/\" target=\"_blank\" rel=\"nofollow noopener\">this guide</a> for details).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"cross-environment-npm-packages---distribution-files\" style=\"position:relative;\"><a href=\"#cross-environment-npm-packages---distribution-files\" aria-label=\"cross environment npm packages   distribution files permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Cross-Environment NPM Packages - Distribution Files</h3>\n<p>The easiest way (for both you <em>and</em> your users) is to distribute both browser JS and Node.JS code in the same package is to automatically bundle the browser code together into a <em>distributable</em> file(s), and upload it to the NPM registry along with your regular NodeJS files.</p>\n<p>Pre-compiling the final browser-ready and node-ready code just takes a little time and processing power on your end, but can save a bunch of headache for your end-users.</p>\n<p>Using this strategy usually involves at least a few of the following steps:</p>\n<ul>\n<li>\n<p>Create an automated build process step that creates the JS files that can be consumed by the browser</p>\n<ul>\n<li>\n<p><strong><em>Use a logical module pattern</em></strong> (probably <strong><em>UMD</em></strong>)</p>\n<ul>\n<li>Unless your code was written as 100% vanilla JS, with no modules, you need to convert the code to a module pattern that the browser can understand. <strong><em>UMD</em></strong> is a great fit for this case, as it works for both Node.JS and the browser. </li>\n<li>ES6 Modules (aka <em>ES Modules</em>) are gaining browser support, but still leave out ~10% of users (2020).</li>\n<li>You could technically use an IIFE and global scope for cross-compatibility, but UMD uses that anyways as a last-resort fallback</li>\n</ul>\n</li>\n<li>This can be via a standard script entry calling a standard bundler like Webpack (example - <a href=\"https://github.com/vuetifyjs/vuetify/blob/9e4e561610e07c15f5449d9040a1227bf9bda9af/packages/vuetify/package.json#L53\" target=\"_blank\" rel=\"nofollow noopener\">Vuetify</a>), or even something more advanced, like calling and executing a Makefile (example - <a href=\"https://github.com/chaijs/chai/blob/23764f340d6d3796eafdb7a9869b423bc45e0c8b/Makefile#L16-L29\" target=\"_blank\" rel=\"nofollow noopener\">chaijs</a>)</li>\n<li>\n<p>Ideally, if this is a true distribution file, it should be minified / optimized</p>\n<ul>\n<li>You might want to include source-maps</li>\n</ul>\n</li>\n<li>You can trigger the build step <em>automatically</em> (⚡) before NPM publishing by using the <code>prepublish</code> script entry in <code>package.json</code>!</li>\n</ul>\n</li>\n<li>\n<p>Make sure the distributable files are including in the NPM release, but optionally (although highly recommended), exclude the compiled files from being tracked in version control (e.g. Git)</p>\n<ul>\n<li>The easiest way to include <code>dist</code> files in a NPM release, but exclude from <code>git</code>, is by adding the <code>dist</code> files to your <code>.gitignore</code>, and then using the <code>files</code> entry in <code>package.json</code> to include them in the NPM release. See the <a href=\"#publishing\">publishing section</a> for more details.</li>\n<li><a href=\"https://gist.github.com/Rich-Harris/51e1bf24e7c093469ef7a0983bad94cb\" target=\"_blank\" rel=\"nofollow noopener\">Please don't</a> require your end users to transpile code themselves...</li>\n</ul>\n</li>\n<li>\n<p>Provide instructions to your users on how to pull the bundled browser-ready JS into a webpage</p>\n<ul>\n<li>You might give multiple options, such as pulling directly from <code>./node_modules/{...}</code> folder in a <code>&#x3C;script></code> tag, to pulling from a file distributed via a CDN, such as <code>jsdelivr</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"targeting-umd-output-from-bundlers\" style=\"position:relative;\"><a href=\"#targeting-umd-output-from-bundlers\" aria-label=\"targeting umd output from bundlers permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Targeting UMD Output From Bundlers</h4>\n<ul>\n<li>\n<p>Browserify</p>\n<ul>\n<li>\n<p>Use the <code>-s {myVarName}</code> <a href=\"https://github.com/browserify/browserify/blob/master/readme.markdown#usage\" target=\"_blank\" rel=\"nofollow noopener\">option</a></p>\n<ul>\n<li>aka <em>standalone</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Webpack</p>\n<ul>\n<li>Use the <code>libraryTarget</code> option</li>\n</ul>\n</li>\n<li>\n<p>Rollup</p>\n<ul>\n<li>Use the <code>--format umd --name \"{myVarName}\"</code> option</li>\n</ul>\n</li>\n<li>\n<p>Parcel</p>\n<ul>\n<li>Use the <code>--global {myVarName}</code> <a href=\"https://parceljs.org/cli.html#expose-modules-as-umd\" target=\"_blank\" rel=\"nofollow noopener\">option</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"cross-environment-npm-packages---real-world-examples\" style=\"position:relative;\"><a href=\"#cross-environment-npm-packages---real-world-examples\" aria-label=\"cross environment npm packages   real world examples permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Cross-Environment NPM Packages - Real World Examples</h2>\n<p>To understand how to write, package, and distribute a cross-environment NPM Package, it might help to see real example repositories. Here are some popular projects as examples:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"nofollow noopener\">Axios</a>: Promise-Based HTTP Request Library (for both Node and Browser)</p>\n<ul>\n<li><strong>Bundler</strong>: <a href=\"https://github.com/axios/axios/blob/16aa2ce7fa42e7c46407b78966b7521d8e588a72/webpack.config.js\" target=\"_blank\" rel=\"nofollow noopener\">Webpack</a></li>\n<li><strong>Target</strong>: <a href=\"https://github.com/axios/axios/blob/16aa2ce7fa42e7c46407b78966b7521d8e588a72/webpack.config.js#L13\" target=\"_blank\" rel=\"nofollow noopener\">UMD</a></li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/axios/axios/blob/16aa2ce7fa42e7c46407b78966b7521d8e588a72/package.json\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li>\n<p><strong>Detection Code</strong>:</p>\n<ul>\n<li>Mainly <a href=\"https://github.com/axios/axios/blob/16aa2ce7fa42e7c46407b78966b7521d8e588a72/lib/defaults.js#L16-L26\" target=\"_blank\" rel=\"nofollow noopener\">implemented in the <em>adapter</em></a>, which is kind of the core base that is passed around.</li>\n</ul>\n</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>They track the minified code in VC (don't gitignore). I believe this is to support hotlinking / direct caching of Github assets via CDN layer. <a href=\"https://github.com/axios/axios/tree/16aa2ce7fa42e7c46407b78966b7521d8e588a72/dist\" target=\"_blank\" rel=\"nofollow noopener\">See <code>/dist</code> folder</a>.</li>\n<li>They include source maps with minified JS</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/visionmedia/superagent\" target=\"_blank\" rel=\"nofollow noopener\">superagent</a>: HTTP Request Library (similar to Axios)</p>\n<ul>\n<li><strong>Bundler</strong>: <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/package.json#L151\" target=\"_blank\" rel=\"nofollow noopener\">browserify</a> (called directly via CLI, no config file) ( + babel)</li>\n<li><strong>Target</strong>: <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/package.json#L151\" target=\"_blank\" rel=\"nofollow noopener\">UMD</a> (using <code>-s {global_name}</code> (standalone) with browserify <a href=\"https://github.com/browserify/browserify/blob/master/readme.markdown#usage\" target=\"_blank\" rel=\"nofollow noopener\">triggers UMD</a>)</li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/package.json\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li><strong>Detection Code</strong>:</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>\n<p>They <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/.gitignore#L1\" target=\"_blank\" rel=\"nofollow noopener\">do <em>not</em> track distribution files in VC</a>, but <em>do</em> upload them via NPM. A little unusual is that they <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/.npmignore#L9\" target=\"_blank\" rel=\"nofollow noopener\">do <em>not</em> include source files in NPM upload</a>, ONLY the babel'ified files.</p>\n<ul>\n<li><code>/src</code> is transformed (via babel) into <code>/lib</code>, <a href=\"https://github.com/visionmedia/superagent/blob/2fcea621c69e3cc779bc59f5f3e8677c2cce8f99/package.json#L155\" target=\"_blank\" rel=\"nofollow noopener\">in <code>build:lib</code> task</a>.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/flitbit/diff\" target=\"_blank\" rel=\"nofollow noopener\">flitbit/diff</a>: Deep object comparison</p>\n<ul>\n<li>\n<p><strong>Bundler</strong>: None! (src code is <em>already</em> written in UMD format, by hand)</p>\n<ul>\n<li>They <a href=\"https://github.com/flitbit/diff/blob/e2b5b86add402ae4373ab025ee7e9a98e3424023/package.json#L48\" target=\"_blank\" rel=\"nofollow noopener\">use <code>uglifyjs</code> for compression though</a></li>\n</ul>\n</li>\n<li><strong>Target</strong>: <a href=\"https://github.com/flitbit/diff/blob/e2b5b86add402ae4373ab025ee7e9a98e3424023/index.js\" target=\"_blank\" rel=\"nofollow noopener\">UMD</a> (see above note, on not using a bundler)</li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/flitbit/diff/blob/e2b5b86add402ae4373ab025ee7e9a98e3424023/package.json\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li><strong>Detection Code</strong>: Not really necessary</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/mochajs/mocha\" target=\"_blank\" rel=\"nofollow noopener\">Mocha</a>: Testing Framework</p>\n<ul>\n<li>\n<p><strong>Bundler</strong>: <a href=\"https://github.com/mochajs/mocha/blob/2d32246de032185297f5b4afd1136b850fefe065/rollup.config.js\" target=\"_blank\" rel=\"nofollow noopener\">Rollup</a></p>\n<ul>\n<li>They recently switched from <code>browserify</code> to <code>rollup + babel</code> - you can <a href=\"https://github.com/mochajs/mocha/pull/4293\" target=\"_blank\" rel=\"nofollow noopener\">see how they did so in the PR</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Target</strong>: <a href=\"https://github.com/mochajs/mocha/blob/2d32246de032185297f5b4afd1136b850fefe065/rollup.config.js#L15-L22\" target=\"_blank\" rel=\"nofollow noopener\">IIFE</a></p>\n<ul>\n<li>IIFE is totally acceptable here instead of UMD, since the output is a single browser-<strong>only</strong> <code>js</code> file, not to be shared across both NodeJS and Browser.</li>\n</ul>\n</li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/mochajs/mocha/blob/2d32246de032185297f5b4afd1136b850fefe065/package.json\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li>\n<p><strong>Detection Code</strong>:</p>\n<ul>\n<li>The overall separation is maintained by having a different entry-point; they use <a href=\"https://github.com/mochajs/mocha/blob/2d32246de032185297f5b4afd1136b850fefe065/browser-entry.js\" target=\"_blank\" rel=\"nofollow noopener\"><code>browser-entry.js</code> as a browser-only wrapper / initializer</a> of Mocha.</li>\n<li>They also have various sections of code that use reusable detection method and then take different paths; <a href=\"https://github.com/mochajs/mocha/blob/2d32246de032185297f5b4afd1136b850fefe065/lib/mocha.js#L64-L71\" target=\"_blank\" rel=\"nofollow noopener\">example</a>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/Marak/faker.js\" target=\"_blank\" rel=\"nofollow noopener\">faker.js</a>: Generate fake / placeholder data</p>\n<ul>\n<li><strong>Bundler</strong>: <a href=\"https://github.com/Marak/faker.js/blob/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/build/gulpfile.js\" target=\"_blank\" rel=\"nofollow noopener\">gulp</a> (for tasks) and <a href=\"https://github.com/Marak/faker.js/blob/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/build/gulpfile.js#L41-L47\" target=\"_blank\" rel=\"nofollow noopener\">browserify</a> (for actual transpiling)</li>\n<li><strong>Target</strong>: <a href=\"https://github.com/Marak/faker.js/blob/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/build/gulpfile.js#L42-L46\" target=\"_blank\" rel=\"nofollow noopener\">UMD</a></li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/Marak/faker.js/blob/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/package.json\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li><strong>Detection Code</strong>: Not really used / necessary</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>Transpiled browser code (both full and minified) is <a href=\"https://github.com/Marak/faker.js/tree/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/build/build\" target=\"_blank\" rel=\"nofollow noopener\"><em>not</em> excluded from VC</a>. These files are also <a href=\"https://github.com/Marak/faker.js/blob/bfe2c9906abd29b7d3d925e6d7cc41530c3a42b8/.npmignore#L4-L5\" target=\"_blank\" rel=\"nofollow noopener\"><em>explicitly</em> included in NPM upload</a>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/graypegg/chromatism/tree/10c912c687c8774b77fcb085e3fce5b7170c58a1\" target=\"_blank\" rel=\"nofollow noopener\">chromatism</a>: Color Utilities</p>\n<ul>\n<li><strong>Bundler</strong>: <a href=\"https://github.com/graypegg/chromatism/blob/10c912c687c8774b77fcb085e3fce5b7170c58a1/rollup.config.js\" target=\"_blank\" rel=\"nofollow noopener\">Rollup</a></li>\n<li><strong>Target</strong>: <a href=\"https://github.com/graypegg/chromatism/blob/10c912c687c8774b77fcb085e3fce5b7170c58a1/rollup.config.js#L19\" target=\"_blank\" rel=\"nofollow noopener\">UMD</a></li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/graypegg/chromatism/blob/10c912c687c8774b77fcb085e3fce5b7170c58a1/package.json\" target=\"_blank\" rel=\"nofollow noopener\">Here</a></li>\n<li><strong>Detection code</strong>: Not really necessary</li>\n<li>\n<p>Notes:</p>\n<ul>\n<li>Source code uses ESM, but both ESM and CJS (UMD) are distributed, via <a href=\"https://github.com/graypegg/chromatism/blob/10c912c687c8774b77fcb085e3fce5b7170c58a1/package.json#L6\" target=\"_blank\" rel=\"nofollow noopener\">module</a> and <a href=\"https://github.com/graypegg/chromatism/blob/10c912c687c8774b77fcb085e3fce5b7170c58a1/package.json#L5\" target=\"_blank\" rel=\"nofollow noopener\">main</a> fields.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/isomorphic-git/isomorphic-git/tree/f2e38053733f4c8ca4b7784d5c2a56addcf36bf4\" target=\"_blank\" rel=\"nofollow noopener\">isomorphic-git</a></p>\n<ul>\n<li><strong>Bundler</strong>: <a href=\"https://github.com/isomorphic-git/isomorphic-git/blob/f2e38053733f4c8ca4b7784d5c2a56addcf36bf4/rollup.config.js\" target=\"_blank\" rel=\"nofollow noopener\">Rollup</a> (<em>and</em> <a href=\"https://github.com/isomorphic-git/isomorphic-git/blob/f2e38053733f4c8ca4b7784d5c2a56addcf36bf4/webpack.config.js\" target=\"_blank\" rel=\"nofollow noopener\">Webpack</a>)</li>\n<li><strong>Target</strong>: Pretty much all of them (<a href=\"https://github.com/isomorphic-git/isomorphic-git/blob/f2e38053733f4c8ca4b7784d5c2a56addcf36bf4/rollup.config.js\" target=\"_blank\" rel=\"nofollow noopener\">UMD, ES, CommonJS</a>)</li>\n<li><strong>Package.json</strong>: <a href=\"https://github.com/isomorphic-git/isomorphic-git/blob/f2e38053733f4c8ca4b7784d5c2a56addcf36bf4/package.json\" target=\"_blank\" rel=\"nofollow noopener\">Here</a></li>\n<li><strong>Detection code</strong>: It mostly doesn't have much; it requires you bring your own <code>fs</code> and <code>http</code> lib <em>with you</em></li>\n</ul>\n</li>\n</ul>\n<p>Examples of PRs / Commits that add various cross-browser stuff</p>\n<ul>\n<li><code>sindresorhus/ky</code>: <a href=\"https://github.com/sindresorhus/ky/pull/81\" target=\"_blank\" rel=\"nofollow noopener\">PR #81 - Add UMD Build</a></li>\n</ul>\n<blockquote>\n<p>For finding more real-world examples, try <a href=\"https://github.com/search?o=desc&#x26;q=node+browser&#x26;s=stars&#x26;type=Repositories\" target=\"_blank\" rel=\"nofollow noopener\">searching \"node browser\" on Github and sorting by star count</a>.</p>\n</blockquote>",
              "fields": {
                "title": "Node / NPM Cross-Environment Isomorphic Packages - Dev Tips",
                "slug": "/cheatsheets/node-and-npm/npm-node-cross-env-packages/",
                "modifiedStampMs": 1605203588000,
                "createdStampMs": 1594783237000
              },
              "parent": {
                "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/npm-node-cross-env-packages.md",
                "relativePath": "cheatsheets/node-and-npm/npm-node-cross-env-packages.md",
                "base": "npm-node-cross-env-packages.md",
                "name": "npm-node-cross-env-packages"
              }
            },
            {
              "id": "ed7d036d-cd72-5386-a3a7-3f5ebcdef70c",
              "fileAbsolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/building-an-npm-package.md",
              "html": "<blockquote>\n<p>Note: You might also find helpful my notes <a href=\"./node-general.md\">NodeJS</a>, <a href=\"./npm-general.md\">NPM</a>, and/or <a href=\"./npm-node-cross-env-packages.md\">cross-env packages</a>.</p>\n</blockquote>\n<h2 id=\"building-an-npm-package---helpful-links-and-resources\" style=\"position:relative;\"><a href=\"#building-an-npm-package---helpful-links-and-resources\" aria-label=\"building an npm package   helpful links and resources permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Building an NPM Package - Helpful Links and Resources</h2>\n<details>\n\t<summary>Click to expand resource section</summary>\n<ul>\n<li><a href=\"httns://docs.npmjs.com/creating-node-js-modules\" target=\"_blank\" rel=\"nofollow noopener\">NPM guide</a></li>\n<li>\n<p>Package.json specifics:</p>\n<ul>\n<li>Official NPM: <a href=\"https://docs.npmjs.com/files/package.json\" target=\"_blank\" rel=\"nofollow noopener\">Main Doc Page</a></li>\n<li>Official NPM: <a href=\"https://nodejs.org/api/esm.html#esm_packages\" target=\"_blank\" rel=\"nofollow noopener\">ESM Integration with Package.json</a></li>\n<li>Official Yarn: <a href=\"https://classic.yarnpkg.com/en/docs/package-json/\" target=\"_blank\" rel=\"nofollow noopener\">Main Doc Page</a></li>\n</ul>\n</li>\n<li>Skypack Docs: <a href=\"https://docs.skypack.dev/package-authors/package-checks\" target=\"_blank\" rel=\"nofollow noopener\">Package Quality Score</a></li>\n<li><a href=\"https://scotch.io/bar-talk/how-to-build-and-publish-a-npm-package\" target=\"_blank\" rel=\"nofollow noopener\">Scotch.io guide</a></li>\n<li>BetterStack: <a href=\"https://betterstack.dev/blog/npm-package-best-practices/\" target=\"_blank\" rel=\"nofollow noopener\">Publishing an NPM Package - Best Practices</a> (comprehensive 👍, probably one of the best guides I have ever seen 💯)</li>\n<li>\n<p>Codecentric / Bastian Krol: <a href=\"https://blog.codecentric.de/en/2014/02/cross-platform-javascript/\" target=\"_blank\" rel=\"nofollow noopener\">Cross Platform JavaScript with Browserify</a></p>\n<ul>\n<li>Also covers using Grunt as task-runner</li>\n</ul>\n</li>\n<li>\n<p>Webpack: <a href=\"https://webpack.js.org/guides/author-libraries/\" target=\"_blank\" rel=\"nofollow noopener\">\"Authoring Libraries\" Guide</a></p>\n<ul>\n<li>Example repo: <a href=\"https://github.com/kalcifer/webpack-library-example\" target=\"_blank\" rel=\"nofollow noopener\"><code>webpack-library-example</code></a></li>\n</ul>\n</li>\n<li>\n<p>TypeScript Specific</p>\n<ul>\n<li>TS Handbook: <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html\" target=\"_blank\" rel=\"nofollow noopener\">Publishing Declaration Files</a></li>\n<li>ITNext: <a href=\"https://itnext.io/step-by-step-building-and-publishing-an-npm-typescript-package-44fe7164964c\" target=\"_blank\" rel=\"nofollow noopener\">\"Step by Step: Building and Publishing [...]</a></li>\n<li>Marco Botto: <a href=\"https://marcobotto.com/blog/compiling-and-bundling-typescript-libraries-with-webpack/\" target=\"_blank\" rel=\"nofollow noopener\">Compiling and Bundling [...] with Webpack</a></li>\n<li>@terabaud: <a href=\"https://dev.to/terabaud/i-created-and-my-first-typescript-library-and-published-it-on-npm-44c\" target=\"_blank\" rel=\"nofollow noopener\">My First TypeScript Library</a></li>\n<li>2ality: <a href=\"https://2ality.com/2020/04/npm-cjs-typescript.html\" target=\"_blank\" rel=\"nofollow noopener\">Creating CommonJS-based NPM Packages via TypeScript</a></li>\n<li>loyc: <a href=\"http://typescript-react-primer.loyc.net/publish-npm-package.html\" target=\"_blank\" rel=\"nofollow noopener\">How to publish a NPM Package (Properly)</a></li>\n<li>\n<p>loyc: <a href=\"http://typescript-react-primer.loyc.net/tutorial-2.html\" target=\"_blank\" rel=\"nofollow noopener\">Setting up a TypeScript Project - 3 Approaches</a></p>\n<ul>\n<li>This is for a React project, but still has useful intro materials for any TS project</li>\n</ul>\n</li>\n<li>Nokes: <a href=\"https://medium.com/cameron-nokes/the-30-second-guide-to-publishing-a-typescript-package-to-npm-89d93ff7bccd\" target=\"_blank\" rel=\"nofollow noopener\">The 30 second guide to publishing [...]</a></li>\n<li>\n<p>Kamalizade: <a href=\"https://ali-dev.medium.com/how-to-publish-a-js-library-to-npm-with-rollup-typescript-8b51ede8f562\" target=\"_blank\" rel=\"nofollow noopener\">Publishing to NPM with Rollup &#x26; TypeScript</a></p>\n</details>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"picking-a-module-pattern-for-your-npm-package\" style=\"position:relative;\"><a href=\"#picking-a-module-pattern-for-your-npm-package\" aria-label=\"picking a module pattern for your npm package permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Picking a Module Pattern for your NPM Package</h2>\n<p>For understanding all the differences between different JS module patterns, I recommend checking out <a href=\"./js/js-modules.md\">my separate cheatsheet on the topic</a>.</p>\n<p>For writing the <strong><em>source code</em></strong> of your package, if you are using a bundler / transpiler, you have a pretty endless amount of options (see below). If you are not bundling / transpiling your code, you should probably stick to hand-coded <code>CommonJS</code> or <code>UMD</code> for maximum compatibility across the most versions of Node.</p>\n<p>For <strong><em>distributing</em></strong> your code, the general consensus is that your main entry point (ala <em>main</em>) should point to either <code>CommonJS</code>, or <code>UMD</code> (especially if trying to support cross-environment / isomorphic). This is for maximum compatibility; although ESM is now enabled without a flag in NodeJS, it is still labeled <em>experimental</em> in 2020.</p>\n<blockquote>\n<p>More and more developers are moving to ESM / ES2015 / ES6 module style, which has a lot of benefits. If you want to take advantage of ESM, you can write your source code in it, and optionally ship ESM via NPM alongside a legacy CJS bundle.</p>\n</blockquote>\n<h3 id=\"module-pattern---source-code-vs-distribution\" style=\"position:relative;\"><a href=\"#module-pattern---source-code-vs-distribution\" aria-label=\"module pattern   source code vs distribution permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Module Pattern - Source Code vs Distribution</h3>\n<p>The reason why I made the emphasis on <strong><em>distribution</em></strong> vs <strong><em>source code</em></strong>, is because if you are using a transpiler / bundler, then it can do the automatic work of taking source code that is written in a newer, but less compatible module pattern (such as <em>ESM</em>), and transpile it to a more widely accepted pattern (such as <em>UMD</em>). This is a huge advantage, as something like <em>UMD</em> is messy to write by hand and track in source code, but can be auto-generated by your build tool.</p>\n<p>In fact, you can even bundle and distribute multiple versions of your code with different module patterns, all in the same package, to support users who want / need legacy support, as well as those that want the newest module pattern. That's right; <strong>you can distribute UMD and ESM in the same library, with the same <code>package.json</code> file</strong>.</p>\n<p>You just need to use the <code>module</code> field to point to the ESM entry, while continuing to use the <code>main</code> field to point to the legacy <code>UMD</code> or <code>CommonJS</code> entry:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-cross-env-lib\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/output.umd.js\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/output.esm.js\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Rich Harris has a <a href=\"https://github.com/rollup/rollup/wiki/pkg.module\" target=\"_blank\" rel=\"nofollow noopener\">wonderful writeup about this</a>, as part of the Rollup docs.</p>\n<blockquote>\n<p>Another (new) relevant method is with <a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/esm.html#esm_conditional_exports\" target=\"_blank\" rel=\"nofollow noopener\">NodeJS <em>Conditional Exports</em></a>. <a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/esm.html#esm_dual_commonjs_es_module_packages\" target=\"_blank\" rel=\"nofollow noopener\">This section of the Node docs</a> covers this strategy for delivering side-by-side ESM and CJS entries, as well as general tips on dealing with <em>dual package</em> delivery.</p>\n</blockquote>\n<h3 id=\"module-pattern-continued---esm-in-source-code\" style=\"position:relative;\"><a href=\"#module-pattern-continued---esm-in-source-code\" aria-label=\"module pattern continued   esm in source code permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Module Pattern Continued - ESM in Source Code</h3>\n<p>As previously mentioned, at least in the year 2020, using <code>CommonJS</code> as the module pattern in your source code offers maximum compatibility with the most versions of NodeJS, and the least headache. <em>However</em>, if you are really itching to write your source code with ESM, you can do so, but ideally should <strong><em>deliver</em></strong> a pre-transpiled CJS version as the final version to support <em>all</em>  users (alongside the ESM code for those that can use it).</p>\n<blockquote>\n<p>Note: Even if you are already using a bundler, you might have to add another tool / step to transform the ESM (and or <code>ES6</code> stuff); often you need to separately add <code>transpiling</code> as a step in-between source code and bundling. Or, your bundler might have an option to specify the use of a tool like <code>babel</code> in the input options / config directly.</p>\n</blockquote>\n<p>A very common pattern is to keep all your <code>ESM</code> code in a subdirectory, such as <code>/src</code>. Then, as your build step, you transpile to <code>/lib</code>. So, to summarize, the common folder structure is:</p>\n<ul>\n<li>\n<p><code>/src</code></p>\n<ul>\n<li>Contains your original code, with <code>ESM</code> (and / or other less compatible stuff)</li>\n<li>Tracked in VC, optionally omitted in NPM upload</li>\n</ul>\n</li>\n<li>\n<p><code>/lib</code></p>\n<ul>\n<li>Contains the <em>transpiled</em> version of <code>/src</code></li>\n<li>Usually generated by <code>babel</code>, and via your <code>build</code> command</li>\n<li>Probably don't want to track in VC, but should include in distribution</li>\n</ul>\n</li>\n<li>\n<p><code>/dist</code></p>\n<ul>\n<li>OPTIONAL: Contains minified / uglified / compressed version of <code>/lib</code></li>\n<li>If building a cross-environment (Node + Browser) package, this would probably contain the browser-specific final code (see <a href=\"./npm-node-cross-env-packages.md\">my cross-env package guide</a> for details).</li>\n<li>Like <code>/lib</code>, usually don't want to track in VC, but should be included in distribution</li>\n<li>\n<p>The reason why this is usually generated by optimizing <code>/lib</code> and not <code>/src</code>, is because many compressors (such as <code>uglifyjs</code>) are <em>not</em> compatible with the newest JS features, so their input has to be transpiled anyways; feeding it <code>/lib</code> is saving an unnecessary duplicate transpiling</p>\n<ul>\n<li>If your <code>/src</code> folder is already compatible with most modern versions of Node (or to where you feel comfortable) <em>and</em> compatible with your minifier / optimizer, then you could just minify directly from <code>/src</code> to <code>/dist</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>You can choose to deliver <em>both</em> CJS alongside your original ESM code, or only the final CJS version. If you opt to <em>only</em> include the final CJS version, using the folder structure from above, you would simply exclude the <code>/src</code> directory from the NPM upload, and make absolutely sure the entry point is inside the <code>/dist</code> folder.</p>\n<blockquote>\n<p>If you are delivering both at the same time, you would point <code>package.main</code> to the <code>commonjs</code> entry (e.g. <code>dist/index.js</code>) and <code>package.module</code> to the ESM entry point (e.g. <code>src/index.js</code>).</p>\n</blockquote>\n<blockquote>\n<p>A benefit to delivering ESM is that it works with tree-shaking, and allows ESM consumers to avoid messy CJS interop syntax.</p>\n</blockquote>\n<h2 id=\"transpiling\" style=\"position:relative;\"><a href=\"#transpiling\" aria-label=\"transpiling permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Transpiling</h2>\n<p>If you want to use bleeding-edge JS features, or other code that might be natively unsupported by most versions of Node but are supported by a transpiler, you can do so. The normal pattern for doing this is to keep all your code in a subdirectory (e.g. <code>/src</code>) and transpile to another directory (e.g. <code>/dist</code>). You then exclude <code>/dist</code> from version control, but include it in the NPM upload and set your entry point inside it.</p>\n<p>My instructions here are very similar to <a href=\"#module-pattern-continued---esm-in-source-code\">my section on using ES Modules in a package's source code</a>, so check that out if you are looking for a more in-depth explanation.</p>\n<h2 id=\"distribution-paths-and-module-resolution---the-root-directory-issue\" style=\"position:relative;\"><a href=\"#distribution-paths-and-module-resolution---the-root-directory-issue\" aria-label=\"distribution paths and module resolution   the root directory issue permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Distribution Paths and Module Resolution - The Root Directory Issue</h2>\n<blockquote>\n<p><strong>Disclaimer</strong>: I'll be honest, this part of package development continues to confuse me and always seems convoluted and overly-complicated 😒. It took me considerable effort to gather the resources for this section, which <em>should not</em> have been the case.</p>\n</blockquote>\n<p>In general, it seems like Node and NPM <em>still</em> have a big problem with nested source file resolution, even when <code>package.main</code> and/or <code>package.exports</code> is explicitly set to point to a nested target. I'm loosely referring to this as the \"root directory\" issue, but as you'll see in my \"background\" section, there have been multiple proposals to address this which have fallen under different names. This can actually be a really problematic and frustrating issue, and it makes me angry 😡 that so many guides seem to gloss over this, or leave the issue to bundling without discussing how it gets solved...</p>\n<p>For example, assuming this structure for <code>my-lib</code>:</p>\n<ul>\n<li><strong><em>package.json</em></strong></li>\n<li>\n<p><strong>/src</strong></p>\n<ul>\n<li>/index.js</li>\n<li>/validators.js</li>\n<li>/constants (dir)\n- /index.js</li>\n</ul>\n</li>\n<li>\n<p><strong>/dist</strong> (auto-generated)</p>\n<ul>\n<li>/index.d.ts</li>\n<li>/index.js</li>\n<li>/validators.js</li>\n<li>/validators.d.ts</li>\n<li>\n<p>/constants (dir)</p>\n<ul>\n<li>/index.js</li>\n<li>/index.d.ts</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>If you have <code>package.main</code> point to <code>dist/index.js</code>, you would expect that in the consuming project, you could write <code>validators = require('my-lib/validators)</code>... but that is not the case. That will throw an error, unless you change it to <code>require('my-lib/dist/validators')</code> even though main is pointing inside <code>dist</code> already!</p>\n<h3 id=\"background-on-root-directory-issues-with-nodejs\" style=\"position:relative;\"><a href=\"#background-on-root-directory-issues-with-nodejs\" aria-label=\"background on root directory issues with nodejs permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Background on Root Directory Issues with NodeJS</h3>\n<p>The answer to <em>why</em> this is the case is complicated, and mostly has to do with module resolution, and how the default in <code>node</code> is to resolve to the root of the package inside <code>node_modules</code>, where <code>package.json</code> is located. If you are curious, here are some relevant links that help explain this:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/49859159/11447682\" target=\"_blank\" rel=\"nofollow noopener\">S/O Response</a> to \"how to publish [...] without dist in import\"</li>\n<li>NodeJS Docs: <a href=\"https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\" target=\"_blank\" rel=\"nofollow noopener\">\"Loading from node_modules folder\"</a> (explains module resolution algorithm)</li>\n</ul>\n<p><a href=\"https://blog.izs.me/2013/02/why-no-directorieslib-in-node-the-less-snarky\" target=\"_blank\" rel=\"nofollow noopener\">Here</a> is the <strong>creator</strong>, (and founder + former CEO) of NPM, writing in 2013 about why this functionality was not added, and why he felt it should not be.</p>\n<p>There have also been multiple discussions on either changing the default behavior, or adding a field to <code>package.json</code> to specify adding / modifying the default root directory.</p>\n<ul>\n<li>\n<p>nodejs/node: <a href=\"https://github.com/nodejs/node/issues/14970\" target=\"_blank\" rel=\"nofollow noopener\">Issue #14970 - Request to add <code>mainDir</code> to <code>package.json</code></a></p>\n<ul>\n<li><strong><em>FINALLY</em></strong>, here are a bunch of people talking openly and clearly about this being a common issue and needing better solutions</li>\n</ul>\n</li>\n<li>\n<p>nodejs/node: <a href=\"https://github.com/nodejs/node/issues/3953\" target=\"_blank\" rel=\"nofollow noopener\">Issue #3953 - Request to rework <code>main</code> entry</a></p>\n<ul>\n<li>This exact same request was also communicated on npm/npm: <a href=\"https://github.com/npm/npm/issues/10506\" target=\"_blank\" rel=\"nofollow noopener\">Issue #10506</a></li>\n</ul>\n</li>\n<li>nodejs/node: <a href=\"https://github.com/nodejs/node/issues/21787\" target=\"_blank\" rel=\"nofollow noopener\">Issue #21787 - Request for a <code>package.json</code> root / base directory</a></li>\n<li>microsoft/TypeScript: <a href=\"https://github.com/microsoft/TypeScript/issues/21423\" target=\"_blank\" rel=\"nofollow noopener\">Issue #21423 - Request for multiple <em>main</em> entries / <code>mainField</code></a></li>\n</ul>\n<h3 id=\"approaches-for-working-around-nodejss-root-directory-issue\" style=\"position:relative;\"><a href=\"#approaches-for-working-around-nodejss-root-directory-issue\" aria-label=\"approaches for working around nodejss root directory issue permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Approaches for Working Around NodeJS's Root Directory Issue</h3>\n<p>Here is probably what you are looking for; how have other developers approached this issue? How can you workaround it? Read below:</p>\n<p>Different Approaches</p>\n<ul>\n<li>\n<p>Map the subdirectory(s) via <code>module.exports</code> (only for versions of node supporting ESM or <code>--experimental-modules</code> flag)</p>\n<ul>\n<li>This is basically the newest solution, and is gaining in adoption. However, this really only solves the issue in scenarios where both the library author and library consumer are using ES6 / ES Modules.</li>\n<li>There is <a href=\"https://nodejs.org/dist/latest-v12.x/docs/api/esm.html#esm_packages\" target=\"_blank\" rel=\"nofollow noopener\">now a docs page on this</a></li>\n<li>\n<p>Example implementations:</p>\n<ul>\n<li><a href=\"https://github.com/nodejs/node/issues/14970#issuecomment-571887546\" target=\"_blank\" rel=\"nofollow noopener\">trusktr comment on #14970</a> (shows exports mixed with main, as fallback)</li>\n<li><a href=\"https://github.com/nodejs/node/issues/21787#issuecomment-524709246\" target=\"_blank\" rel=\"nofollow noopener\">jkrems comment on #21787</a> (maps to different subdirs)</li>\n</ul>\n</li>\n<li>This is definitely the way of the future!</li>\n</ul>\n</li>\n<li>\n<p>Import and re-export <em>everything</em> from main entry (e.g. <code>index</code>)</p>\n<ul>\n<li>\n<p>This is a very common pattern; your package has <em>one</em> main export, but might let users access sub-items by either nested methods and/or nested objects (via destructuring).</p>\n<ul>\n<li><code>const {subItemA, subItemB} = require('my-lib');</code></li>\n<li><code>const main = require('my-lib'); main.subMethodA(); main.subMethodB();</code></li>\n</ul>\n</li>\n<li>This allows for destructuring and tree-shaking, but not slashed import / require paths that don't adhere to the source file structure</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/30302962/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/30302962/11447682</a></li>\n<li><a href=\"https://stackoverflow.com/a/54370498/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/54370498/11447682</a></li>\n<li><a href=\"https://stackoverflow.com/a/39743889/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/39743889/11447682</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Keep everything in project root</p>\n<ul>\n<li>Pros: Keeps everything simple, requires less build tooling</li>\n<li>Cons: Can make root of project messy, source files mixed with config files, etc.</li>\n<li>It looks like this is how <code>sindresorhus</code> builds <a href=\"https://www.npmjs.com/search?q=sindresorhus&#x26;ranking=popularity\" target=\"_blank\" rel=\"nofollow noopener\">most of his (non-TS) libraries</a>, for example, <a href=\"https://github.com/sindresorhus/slugify\" target=\"_blank\" rel=\"nofollow noopener\"><code>slugify</code></a></li>\n</ul>\n</li>\n<li>\n<p>Copy <em>everything</em> to subdirectory, or send build output there (e.g. <code>/dist</code>), copy <code>package.json</code> to subdirectory, ensure proper paths in <code>package.json</code>, and run <code>npm publish</code> from subdirectory</p>\n<ul>\n<li>This is basically pretending that things are the same as if you <em>had</em> just put all your files in the project root, with a flat structure</li>\n<li>This could be accomplished with a hand-coded Node script, bash scripting, and/or build tools, like <code>gulp</code></li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/39946795/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/39946795/11447682</a></li>\n<li><a href=\"https://davidwells.io/blog/publishing-flat-npm-packages-for-easier-import-paths-smaller-consumer-bundle-sizes\" target=\"_blank\" rel=\"nofollow noopener\">https://davidwells.io/blog/publishing-flat-npm-packages-for-easier-import-paths-smaller-consumer-bundle-sizes</a></li>\n<li><a href=\"https://stackoverflow.com/a/48460033/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/48460033/11447682</a> (bash)</li>\n<li><a href=\"https://github.com/jussi-kalliokoski/trine/blob/da703916b635b382095e9c032564cae8591355f5/scripts/generate-packages.js\" target=\"_blank\" rel=\"nofollow noopener\">Trine Utility Library</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Add files to the root that simple re-export from the subdirectory</p>\n<ul>\n<li>This is similar to the \"import and re-export everything from index.js\" solution</li>\n<li>If you want to expose <code>my-lib/subdir/alpha.js</code>, you would create a file in the root, <code>my-lib/alpha.js</code>, which simply re-exports: <code>module.exports = require('./subdir/alpha.js</code>)</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/49905912/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/49905912/11447682</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Keep <code>package.json</code> directly in subdirectory instead of root (or a <em>different</em> package.json file than root), and publish from there</p>\n<ul>\n<li>Very similar to the \"copy everything to subdirectory and publish there\" approach, but the difference is that you keep <code>package.json</code> in the subdirectory to start with (as well as any other \"root\" level files)</li>\n<li>In general, I think this is one of the worst approaches; it not conventional, is confusing to those browsing NPM vs those browsing actual source code, and seems error-prone </li>\n<li>If you are leaving a <code>package.json</code> file in the root directory, make sure you have <code>\"private\": true</code>, so you don't accidentally publish the entire thing</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/49877488/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/49877488/11447682</a></li>\n<li><a href=\"https://stackoverflow.com/a/62537089/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/62537089/11447682</a></li>\n<li><a href=\"https://stackoverflow.com/a/52177090/11447682\" target=\"_blank\" rel=\"nofollow noopener\">https://stackoverflow.com/a/52177090/11447682</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Relevant resources:</p>\n<ul>\n<li>\n<p>TypeScript Handbook: <a href=\"https://www.typescriptlang.org/docs/handbook/module-resolution.html\" target=\"_blank\" rel=\"nofollow noopener\">Module Resolution</a></p>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/module-resolution.html#how-nodejs-resolves-modules\" target=\"_blank\" rel=\"nofollow noopener\">\"How Node.js resolves modules\"</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"creating-cross-environment-npm-packages\" style=\"position:relative;\"><a href=\"#creating-cross-environment-npm-packages\" aria-label=\"creating cross environment npm packages permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Creating Cross-Environment NPM Packages</h2>\n<p>I've put together a separate page for some summary information on how to craft and release a cross-environment (aka <em>isomorphic</em>, Node + Browser) package - you can find it <a href=\"./npm-node-cross-env-packages.md\">here</a>.</p>\n<h2 id=\"exposing-a-cli\" style=\"position:relative;\"><a href=\"#exposing-a-cli\" aria-label=\"exposing a cli permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Exposing a CLI</h2>\n<p>You can specify that a specific file will receive CLI commands (instead of index.js), by using the <a href=\"https://docs.npmjs.com/files/package.json#bin\" target=\"_blank\" rel=\"nofollow noopener\"><code>bin</code></a> field in your package.json.</p>\n<p>If you want the command trigger (e.g. what someone types in their CLI to hit your package) to just be your package name, then <code>bin</code> can just be the path to the file:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cli.js\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>But if you want to expose multiple commands, make <code>bin</code> an object with the commands as fields:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"myapp-foo\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cli-foo.js\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"myapp-bar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cli-bar.js\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Make sure that all files exposed through <code>bin</code> start with <code>#!/usr/bin/env node</code>, otherwise they are not executed with the <code>node</code> executable!</p>\n</blockquote>\n<blockquote>\n<p>Warning: If you are using <code>npm link</code> for local development, you might need to re-run <code>npm link</code> every time after modifying <code>bin</code> in order for the changes to be picked up globally. At least, I had to in my case.</p>\n</blockquote>\n<p>See <a href=\"https://docs.npmjs.com/files/package.json#bin\" target=\"_blank\" rel=\"nofollow noopener\">docs</a> for details.</p>\n<h3 id=\"cli-building-helpers\" style=\"position:relative;\"><a href=\"#cli-building-helpers\" aria-label=\"cli building helpers permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>CLI Building Helpers</h3>\n<p>Hand-building a CLI can be labor intensive and error-prone, since you end up dealing with a lot of variable inputs, string parsing, and random ordered arguments. There are some reputable libraries to help with building a CLI:</p>\n<ul>\n<li><a href=\"https://github.com/sindresorhus/meow\" target=\"_blank\" rel=\"nofollow noopener\">sindresorhus/meow</a></li>\n<li><a href=\"https://github.com/tj/commander.js/\" target=\"_blank\" rel=\"nofollow noopener\">tj/commander.js</a></li>\n<li><a href=\"https://github.com/oclif/oclif\" target=\"_blank\" rel=\"nofollow noopener\">oclif</a></li>\n<li>... and many more! Don't re-invent the wheel, when you don't <em>have</em> to.</li>\n</ul>\n<h3 id=\"returning-an-exit-code--boolean-to-the-cli\" style=\"position:relative;\"><a href=\"#returning-an-exit-code--boolean-to-the-cli\" aria-label=\"returning an exit code  boolean to the cli permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Returning an Exit Code / Boolean to the CLI</h3>\n<p>You might have noticed that a lot of build and dev-ops stuff uses multiple commands chained together, often with logical operators and exit codes. For example:</p>\n<p><code>package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"run\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &amp;&amp; npm run serve\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"___\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"___\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>With the above, if build throws an error (and/or returns <em>anything</em> other than <code>0</code> as the exit code), the <code>npm run serve</code> part does <em>not</em> run.</p>\n<p>To return an exit code from your NodeJS script, <a href=\"https://flaviocopes.com/node-terminate-program/\" target=\"_blank\" rel=\"nofollow noopener\">simply use <code>process.exit(errorCode)</code></a>. Just remember that <code>0</code> means success, and any other number represents an error!</p>\n<h2 id=\"exporting-types\" style=\"position:relative;\"><a href=\"#exporting-types\" aria-label=\"exporting types permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Exporting Types</h2>\n<p>Important resources:</p>\n<ul>\n<li>TypeScript Handbook: <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html\" target=\"_blank\" rel=\"nofollow noopener\">Publishing Declaration Files</a></li>\n<li>BetterStack: <a href=\"https://betterstack.dev/blog/publishing-type-definitions-with-npm-package/\" target=\"_blank\" rel=\"nofollow noopener\">Publishing TypeScript Definitions with an NPM Package</a></li>\n</ul>\n<h3 id=\"including-ambient-declarations-in-compiled-types\" style=\"position:relative;\"><a href=\"#including-ambient-declarations-in-compiled-types\" aria-label=\"including ambient declarations in compiled types permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Including Ambient Declarations in Compiled Types</h3>\n<p>It is a common misconception that TSC will copy your ambient declaration files and/or compile them into your output folder. This is not the case, and <a href=\"https://github.com/Microsoft/TypeScript/issues/5112\" target=\"_blank\" rel=\"nofollow noopener\">intentionally so</a>.</p>\n<p>Your options around this are to either:</p>\n<ul>\n<li>\n<p>Rewrite <code>*.d.ts</code> ambient files as regular <code>*.ts</code> files that use <code>export</code> to share types with other files</p>\n<ul>\n<li>Or...</li>\n</ul>\n</li>\n<li>\n<p>Manually copy your <code>*.d.ts</code> file(s) from <code>src</code> to <code>dist</code> (or whatever your export folder is)</p>\n<ul>\n<li>If you use this option, use <code>shx cp</code> for better cross-OS compatibility in your copy command</li>\n<li>If you have a flat directory (no nested <code>src</code> or <code>dist</code>), you could also avoid copying by just explicitly include the files via <code>package.json -> files</code> (for example, that is used in <a href=\"%5Bsindresorhus/meow%5D(https://github.com/sindresorhus/meow/blob/14924def296f0baf99a64f9ae9356f7db5a025bf/package.json#L19-L22)\">sindresorhus/meow</a>).</li>\n</ul>\n</li>\n</ul>\n<p>For more details, check out <a href=\"../typescript.md#ambient-declarations-in-depth\">the \"Ambient Declarations\" section</a> of my TypeScript notes.</p>\n<h3 id=\"forcing-a-single-dts-declaration-file-bundle\" style=\"position:relative;\"><a href=\"#forcing-a-single-dts-declaration-file-bundle\" aria-label=\"forcing a single dts declaration file bundle permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Forcing a Single d.ts Declaration File Bundle</h3>\n<p>You might be tempted to see if you can create a single <code>*.d.ts</code> file for your entire package; it can be a little scary to see TSC literally double the file count in your <code>dist</code> output, because it is creating a declaration file for each generated <code>*.js</code> file.</p>\n<p>However, in general this is either A) not possible, or B) not really necessary.</p>\n<p>There is not a huge amount of benefit (that I know of) to having a single declaration file; as long as you point <code>package.json -> types</code> to the declaration file that mirrors your JS entry-point, the IDE will be able to traverse all the generated declaration files, no matter how many there are.</p>\n<blockquote>\n<p>I'm not saying there are <em>no</em> benefits to bundling to a single declaration file; just that they often outweigh the added complexity and fragility introduced by forcing a non-standard bundling process.</p>\n</blockquote>\n<p>If you really want this, there are <em>some</em> options available:</p>\n<ul>\n<li>\n<p>Native TSC support:</p>\n<ul>\n<li>This was kind of implemented in <a href=\"https://github.com/microsoft/TypeScript/pull/5090\" target=\"_blank\" rel=\"nofollow noopener\">#5090</a>, but <a href=\"(https://github.com/microsoft/TypeScript/issues/2568#issuecomment-305137305)\">**only for <code>amd</code> or <code>system</code> modules</a></li>\n<li>Possibly could be implemented at some point - proposal: <a href=\"https://github.com/microsoft/TypeScript/issues/4433\" target=\"_blank\" rel=\"nofollow noopener\">#4433</a></li>\n<li>\n<p>If you are only using TSC for emitting types for JS (e.i., with <code>emitDeclarationOnly</code> on), you can actually get this to work; just use <code>outFile</code></p>\n<ul>\n<li>Example: <a href=\"https://github.com/yfinkelstein/node-zookeeper/blob/473b032e2e20bd662a9682b70a95892d3dbd9ad9/package.json#L60\" target=\"_blank\" rel=\"nofollow noopener\">command</a>, <a href=\"https://github.com/yfinkelstein/node-zookeeper/blob/473b032e2e20bd662a9682b70a95892d3dbd9ad9/tsconfig.json\" target=\"_blank\" rel=\"nofollow noopener\">tsconfig</a>, <a href=\"https://github.com/yfinkelstein/node-zookeeper/blob/473b032e2e20bd662a9682b70a95892d3dbd9ad9/lib/typedeclarations.d.ts\" target=\"_blank\" rel=\"nofollow noopener\">output</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Alternative tools and bundlers:</p>\n<ul>\n<li>See mentions in <a href=\"https://github.com/microsoft/TypeScript/issues/4433\" target=\"_blank\" rel=\"nofollow noopener\">the #4433 proposal thread</a></li>\n<li><a href=\"https://github.com/Swatinem/rollup-plugin-dts\" target=\"_blank\" rel=\"nofollow noopener\">rollup-plugin-dts</a></li>\n<li><a href=\"https://github.com/timocov/dts-bundle-generator\" target=\"_blank\" rel=\"nofollow noopener\">dts-bundle-generator</a></li>\n</ul>\n</li>\n<li>\n<p>You literally cannot produce a bundled single <code>*.d.ts</code> declaration file with TSC if you are <a href=\"https://github.com/microsoft/TypeScript/issues/2568#issuecomment-305137305\" target=\"_blank\" rel=\"nofollow noopener\">using anything other than <code>amd</code> or <code>system</code></a></p>\n<ul>\n<li>this will <a href=\"https://github.com/microsoft/TypeScript/issues/2568#issuecomment-305137305\" target=\"_blank\" rel=\"nofollow noopener\">not work with <code>commonjs</code></a></li>\n<li>Possibly could be implemented at some point - proposal: <a href=\"https://github.com/microsoft/TypeScript/issues/4433\" target=\"_blank\" rel=\"nofollow noopener\">#4433</a></li>\n<li><a href=\"https://github.com/microsoft/TypeScript/issues/4433#issuecomment-549064242\" target=\"_blank\" rel=\"nofollow noopener\">Manual scripts</a> and string manipulation</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"local-package-testing-and-loading\" style=\"position:relative;\"><a href=\"#local-package-testing-and-loading\" aria-label=\"local package testing and loading permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Local Package Testing and Loading</h2>\n<p>To try out your NPM package, you can link it to the project directory where you want to import the local version for trial; below are some options for how to accomplish this, as well as some tips:</p>\n<ul>\n<li>\n<p>BEST: <a href=\"https://github.com/whitecolor/yalc\" target=\"_blank\" rel=\"nofollow noopener\"><code>yalc</code> CLI</a>!!! (🙏)</p>\n<ul>\n<li>Fast, syntax is similar to <code>npm / yarn</code>, <em>much</em> better emulation of how actual distributed package works</li>\n<li><a href=\"../devops/yalc.md\">I have a cheat sheet / notes page for it</a></li>\n</ul>\n</li>\n<li>\n<p><code>yarn link</code> or <code>npm link</code></p>\n<ul>\n<li>Pros: Fast, since it uses symbolic links to point to source package location</li>\n<li>Cons: Inconsistencies in how it works, stale data, issues with module resolution</li>\n</ul>\n</li>\n<li>\n<p><code>install</code> to <code>package.json</code> with local relative path (<code>file:</code> syntax)</p>\n<ul>\n<li>Under dependencies, this might look something like <code>\"my-lib\": \"file:../../my-lib\"</code></li>\n<li>This works with both <a href=\"https://classic.yarnpkg.com/en/docs/cli/add/\" target=\"_blank\" rel=\"nofollow noopener\"><code>yarn add</code></a> and <a href=\"https://docs.npmjs.com/cli/install\" target=\"_blank\" rel=\"nofollow noopener\"><code>npm install</code></a></li>\n</ul>\n</li>\n<li>\n<p>Using custom webpack resolvers (<code>resolve</code> config)</p>\n<ul>\n<li>Usually done by using <code>alias</code>, and then mapping to local path; see <a href=\"https://webpack.js.org/configuration/resolve/\" target=\"_blank\" rel=\"nofollow noopener\">official docs</a> and <a href=\"https://asten.io/npm-how-to-work-with-local-packages-48da91097478#:~:text=Webpack%20way\" target=\"_blank\" rel=\"nofollow noopener\">this example</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"private-distributed-testing-and-loading\" style=\"position:relative;\"><a href=\"#private-distributed-testing-and-loading\" aria-label=\"private distributed testing and loading permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Private Distributed Testing and Loading</h3>\n<p>Symlink based tools work great for local testing, but what if you want to share a private development version of your package with coworkers, or projects hosted in other environments?</p>\n<p>Although you can <a href=\"https://docs.npmjs.com/creating-and-publishing-private-packages\" target=\"_blank\" rel=\"nofollow noopener\">publish packages as private within an organization with a paid account</a>, the easiest way to quickly share a development build of a package is by sharing the generated <em>tarball</em>.</p>\n<p>Steps:</p>\n<ol>\n<li>\n<p>Generate the tarball archive by using <a href=\"https://docs.npmjs.com/cli-commands/pack.html\" target=\"_blank\" rel=\"nofollow noopener\"><code>npm pack</code></a> in the root of your package to share</p>\n<ul>\n<li>You can use <code>npm pack --dry-run</code> to preview what will be included in the package</li>\n<li>Make sure the output <code>.tgz</code> file(s) are excluded from git and future NPM package builds</li>\n<li>Filename of final <code>.tgz</code> will be shown in console after command is run</li>\n</ul>\n</li>\n<li>\n<p>Get the path of the tarball for sharing</p>\n<ul>\n<li>\n<p><strong>A)</strong> If you are going to be sharing this across devices / networks, you need to host the tarball somewhere where others can access it. Options are endless in this regard; any host that supports public <em>hotlinking</em> will work.</p>\n<ul>\n<li>If you are using Github for your project, you could upload the tarball to an issue or release to get a hosted URL</li>\n<li>Some file sharing sites, like <a href=\"https://www.mediafire.com/\" target=\"_blank\" rel=\"nofollow noopener\">mediafire</a>, support hotlinking</li>\n<li>You can even upload the tarball directly in your console, using <a href=\"https://transfer.sh/\" target=\"_blank\" rel=\"nofollow noopener\">transfer.sh</a></li>\n<li>You could also share the tarball with coworkers via Slack / Email / etc. - and they could download it to use locally (see step 3)</li>\n</ul>\n</li>\n<li>\n<p><strong>B)</strong>: If you are going to be sharing this <em>locally</em>, you just need the filepath of the generated <code>*.tgz</code>. Get it, and copy it somewhere for easy reference.</p>\n<ul>\n<li>Although NPM supports using relative paths, it is safest to just get the full path</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>In the project where you want to <strong><em>use</em></strong> the private package, add the previously generated tarball URL / path as a dependency</p>\n<ul>\n<li>\n<p><strong>Neat</strong>: These methods work for <strong><em>both</em></strong> URLs, and local paths</p>\n<ul>\n<li>For local paths, use <em>posix</em> style (<code>/</code>, forward slashes) to avoid issues</li>\n<li>For URLs, always include the <code>http(s)://</code> prefix</li>\n</ul>\n</li>\n<li>You can use the CLI to add it, with <a href=\"https://docs.npmjs.com/cli/install#:~:text=npm%20install%20%3Ctarball%20url%3E\" target=\"_blank\" rel=\"nofollow noopener\"><code>npm install {tarball_URL_or_Path}</code></a>, or <a href=\"https://classic.yarnpkg.com/en/docs/cli/add/#:~:text=yarn%20add%20https%3A%2F%2Fmy-project.org%2Fpackage.tgz\" target=\"_blank\" rel=\"nofollow noopener\"><code>yarn add {tarball_URL_or_Path}</code></a></li>\n<li>\n<p>Alternatively, you <a href=\"https://docs.npmjs.com/files/package.json#urls-as-dependencies\" target=\"_blank\" rel=\"nofollow noopener\">can add the URL</a> or path directly, by simply using:</p>\n<ul>\n<li><code>\"my-package\": \"https://fake-file-host-not-real.com/my-package-1.0.0.tgz\"</code></li>\n<li><code>\"my-package\": \"C:/temp/my-package/my-package-1.0.0.tgz\"</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>WARNING: With a hosted public URL (no login), this method is not <em>truly</em> 100% private. If you need something to rival NPM's paid private package hosting (which is completely private), then take a look at <a href=\"https://sid.sh/blog/host-private-npm-packages-for-free/\" target=\"_blank\" rel=\"nofollow noopener\">using private git repos as dependencies</a>.</p>\n</blockquote>\n<blockquote>\n<p>This approach is also suitable for local testing, if you need a replacement for the symlink based options.</p>\n</blockquote>\n<h2 id=\"publishing\" style=\"position:relative;\"><a href=\"#publishing\" aria-label=\"publishing permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Publishing</h2>\n<p>You can use <code>npm pack --dry-run</code> or <code>npm publish --dry-run</code> to get a <strong><em>preview</em></strong> of what files would be published. Or just <code>npm pack</code> to generate a local tarball (<code>.tgz</code>).</p>\n<blockquote>\n<p>To quickly get a preview of package size, you can use: <code>npm pack --dry-run 2>&#x26;1 | grep \"size\"</code></p>\n</blockquote>\n<p>If you want to exclude files from being distributed as part of your package, you have a few options:</p>\n<ul>\n<li>\n<p>Use <code>.gitignore</code> file</p>\n<ul>\n<li>Downside: this also prevents files from showing up on Github / tracked in Git</li>\n<li>Not a good solution for preventing large files that you still want tracked in Git</li>\n</ul>\n</li>\n<li>\n<p>Use <code>.npmignore</code> file</p>\n<ul>\n<li>\n<p><strong><em>NOT RECOMMENDED</em></strong>, for <em>several</em> reasons:</p>\n<ul>\n<li>Conflicts with <code>.gitignore</code> file - NPM will not even look at that file if <code>.npmignore</code> exists.</li>\n<li>This is dangerous because if you exclude a password file in your <code>.gitignore</code> but forget to duplicate the rule to your <code>.npmignore</code> file, it will be included in your package!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Use <code>package.json</code> -> <code>\"files\": []</code> (<a href=\"https://classic.yarnpkg.com/en/docs/package-json/#toc-files\" target=\"_blank\" rel=\"nofollow noopener\">docs</a>)</p>\n<ul>\n<li>This is the <strong><em>best option</em></strong></li>\n<li>\n<p>You can move all the files you want to include into a separate folder, and then <em>only</em> include that folder. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token string\">\"src/\"</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>Syntax can be <code>folder/</code> or <code>folder</code>, but <strong>don't</strong> prefix folder names with <code>./</code> (e.g. no <code>./src</code>)</li>\n<li>You can also use globs</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Warning: Make sure you don't have any entries pointing at files/directories that are excluded from publishing! E.g., if you are <em>only</em> publishing <code>./dist</code>, then make sure you don't accidentally have an entry like <code>bin: \"./src/cli.js\"</code></p>\n</blockquote>\n<h2 id=\"misc-tips\" style=\"position:relative;\"><a href=\"#misc-tips\" aria-label=\"misc tips permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Misc Tips</h2>\n<ul>\n<li>\n<p>Be aware of built-in hooks, like <code>install</code>, as well as all  <code>pre</code> / <code>post</code> hooks</p>\n<ul>\n<li><a href=\"https://www.marcusoft.net/2015/08/pre-and-post-hooks-for-npm-scripting.html\" target=\"_blank\" rel=\"nofollow noopener\">Explanatory post</a></li>\n</ul>\n</li>\n<li>\n<p>Know about \"scoped packages\"</p>\n<ul>\n<li>You can publish names with slashes in them, like <code>@joshuatz/right-pad</code></li>\n<li>These by default are scoped to private</li>\n<li>use <code>npm publish --access=public</code> to publish public</li>\n<li>Thanks to <a href=\"https://www.freecodecamp.org/news/how-to-make-a-beautiful-tiny-npm-package-and-publish-it-2881d4307f78/\" target=\"_blank\" rel=\"nofollow noopener\">this post</a> for the tip</li>\n</ul>\n</li>\n<li>\n<p>Don't forget about <code>npm link</code> for local testing</p>\n<ul>\n<li>In package folder <code>npm link</code></li>\n<li>In other project you want to test the package with <code>npm link {packageName}</code></li>\n<li>I personally prefer (and recommend) <a href=\"../devops/yalc.md\">yalc as a better alternative for local testing</a></li>\n</ul>\n</li>\n<li>\n<p>If you are making both a CLI and a regular module, don't forget to have both fields:</p>\n<ul>\n<li><code>main</code> (points to index.js, or whatever your main module file is)</li>\n<li><code>bin</code> (points to the cli.js, or whatever your CLI file(s) are)</li>\n</ul>\n</li>\n<li>\n<p>Just because you see a field in someone elses <code>package.json</code> file, doesn't mean it is natively supported by the spec; it might be something special to be consumed by their build system</p>\n<ul>\n<li>For example, the <code>browser</code> entry field (defines different entry file for browser vs Node) is not part of the official spec, but <a href=\"https://stackoverflow.com/a/49204501/11447682\" target=\"_blank\" rel=\"nofollow noopener\">is supported natively by many of the most popular build tools</a>, such as Webpack and Browserify</li>\n</ul>\n</li>\n<li>You can find a hosted JSON Schema file for <code>package.json</code> <a href=\"https://json.schemastore.org/package\" target=\"_blank\" rel=\"nofollow noopener\">here</a></li>\n<li>\n<p>The package <a href=\"https://github.com/shelljs/shx\" target=\"_blank\" rel=\"nofollow noopener\"><code>shx</code></a> is great for cross-OS commands directly in <code>package.scripts</code></p>\n<ul>\n<li>e.g. <code>\"clean\": \"shx rm -rf dist &#x26;&#x26; shx mkdir dist\"</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"troubleshooting\" style=\"position:relative;\"><a href=\"#troubleshooting\" aria-label=\"troubleshooting permalink\" class=\"anchor before\"><?xml version=\"1.0\" ?><svg id=\"Outlined\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Fill\"><path fill=\"currentColor\" d=\"M29.35,6.88,25.11,2.63a3,3,0,0,0-4.23,0L14.64,8.81a3,3,0,0,0,0,4.25l1.44,1.45-1.54,1.54-1.42-1.42a3,3,0,0,0-4.24,0L2.65,20.8a3,3,0,0,0,0,4.26L6.88,29.3A3,3,0,0,0,9,30.17a3,3,0,0,0,2.11-.86l6.23-6.19A3,3,0,0,0,18.24,21a3,3,0,0,0-.88-2.13L16,17.46l1.54-1.54,1.39,1.38a3,3,0,0,0,4.23,0l6.23-6.18A2.94,2.94,0,0,0,30.23,9,3,3,0,0,0,29.35,6.88ZM15.94,20.29a1,1,0,0,1,.3.71,1,1,0,0,1-.3.7L9.71,27.89a1,1,0,0,1-1.41,0L4.06,23.64a1,1,0,0,1-.3-.71,1,1,0,0,1,.3-.71L10.29,16a1,1,0,0,1,1.41,0l1.42,1.42-2.83,2.83,1.42,1.42,2.83-2.83Zm12-10.58L21.7,15.89a1,1,0,0,1-1.41,0l-1.38-1.38,2.8-2.8-1.42-1.42-2.8,2.8-1.44-1.44a1,1,0,0,1,0-1.42l6.23-6.18A1,1,0,0,1,23,3.76a1,1,0,0,1,.71.29l4.24,4.24a1,1,0,0,1,0,1.42Z\"/></g></svg></a>Troubleshooting</h2>\n<ul>\n<li>\n<p>Error: <code>cannot find module '___'</code> when trying to import a nested source file from your published / built package</p>\n<ul>\n<li>Are you trying to import or require a file with a slashed path that does not <em>exactly</em> match the published package? Node's module resolution maps the root folder to the package's root in <code>node_modules</code>, regardless of where <code>package.main</code> points to.</li>\n<li>See my section on <a href=\"#distribution-paths-and-module-resolution---the-root-directory-issue\">\"The Root Directory Issue\"</a></li>\n</ul>\n</li>\n<li>\n<p>Error: <code>File __.d.ts is not a module</code> when trying to export / consume a declaration file that you generated (TypeScript)</p>\n<ul>\n<li>\n<p>Make sure you didn't combine <code>module: 'commonjs'</code> with <code>outFile</code>; <a href=\"https://github.com/microsoft/TypeScript/issues/7252\" target=\"_blank\" rel=\"nofollow noopener\">these are incompatible</a> (use <code>outDir</code> instead)</p>\n<ul>\n<li>There is a proposal open for the bundling of declaration files - <a href=\"https://github.com/microsoft/TypeScript/issues/4433\" target=\"_blank\" rel=\"nofollow noopener\">#4433</a></li>\n<li>Relevant S/O: <a href=\"https://stackoverflow.com/a/58534016/11447682\" target=\"_blank\" rel=\"nofollow noopener\">#58440177</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
              "fields": {
                "title": "Building an NPM Package - Notes, Tips, and Troubleshooting",
                "slug": "/cheatsheets/node-and-npm/building-an-npm-package/",
                "modifiedStampMs": 1606000073000,
                "createdStampMs": 1595553293000
              },
              "parent": {
                "absolutePath": "/opt/build/repo/md/cheatsheets/node-and-npm/building-an-npm-package.md",
                "relativePath": "cheatsheets/node-and-npm/building-an-npm-package.md",
                "base": "building-an-npm-package.md",
                "name": "building-an-npm-package"
              }
            }
          ],
          "paths": []
        }
      }
    }
  },
  "staticQueryHashes": [
    "2563531922",
    "3649515864",
    "3795822034"
  ]
}
