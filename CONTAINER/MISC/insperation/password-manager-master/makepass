#!/usr/bin/env node

const { Generate } = require('./generate')
const { Platform, Entry, sequelize } = require('./db/models')
const bcrypt = require('bcrypt')


const { 2: length, 3: platform, 4: username, 5: pool } = process.argv


if (process.argv.length < 3) {
  console.log('You must enter atleast the length of the password.')
  console.log('Ex. makepass {length} {platform} {username} [{few} for fewer symbol pool]')
  return
}


let password;
if (pool === 'few') {
  password = new Generate(length).fewSymbols()
} else {
  password = new Generate(length).allSymbols()
}

if (process.argv.length === 3) {
  console.log(password)
  return
} else if (process.argv.length === 4) {
  console.log('You must supply a username for the platform')
  console.log('Ex. makepass {length} {platform} {username} [{few} for fewer symbol pool]')
  return
}

async function createEntry() {

  // check to see if username / platform combo is in database already
  let checkInDatabaseAlready = await Entry.findAll({
    include: [{
      model: Platform,
      where: { name: platform.toLowerCase() }
    }],
    where: { username }
  })

  if (checkInDatabaseAlready.length !== 0) {
    console.log('Username and Platform already in database')
    return await sequelize.close()
  }


  // check to see if the platform is in the system
  let platformInput = await Platform.findAll({
    where: { name: platform.toLowerCase() }
  })

  // if the inputted platform is not already in database, create platform and entry.
  if (platformInput.length === 0) {
    console.log('need to create platform!')
    platformInput = await Platform.create({
      name: platform.toLowerCase()
    })

    await Entry.create({
      username,
      password,
      platformId: platformInput.id
    })

    console.log(`Password created for ${username} on ${platform}. Password: ${password}`)
    return await sequelize.close
  }

  // if platform was already in the database, create entry
  await Entry.create({
    username,
    password,
    platformId: platformInput[0].id
  })

  console.log(`Password created for ${username} on ${platform}. Password: ${password}`)


  return await sequelize.close()
}


createEntry()
