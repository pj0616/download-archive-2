{"version":3,"sources":["webpack:///webpack/bootstrap 0f576f5102b3588aee3b","webpack:///./lib/main.js","webpack:///./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACtFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,gBAAgB,aAAa;AAC7B;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA","file":"./lib/jquery_lite.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f576f5102b3588aee3b","const DomNodeCollection = require(\"./dom_node_collection\");\n\nconst _docReadyCallbacks = [];\nlet _docReady = false;\n\nwindow.$l = arg => {\n  switch(typeof(arg)){\n    case \"function\":\n      return registerDocReadyCallback(arg);\n    case \"string\":\n      return getNodesFromDom(arg);\n    case \"object\":\n      if(arg instanceof HTMLElement){\n        return new DomNodeCollection([arg]);\n      }\n  }\n};\n\n$l.extend = (base, ...otherObjs) => {\n  otherObjs.forEach( obj => {\n    for(let prop in obj){\n      base[prop] = obj[prop];\n    }\n  });\n  return base;\n};\n\n$l.ajax = options => {\n  const request = new XMLHttpRequest();\n  const defaults = {\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n    method: \"GET\",\n    url: \"\",\n    success: () => {},\n    error: () => {},\n    data: {},\n  };\n  options = $l.extend(defaults, options);\n  options.method = options.method.toUpperCase();\n\n  if (options.method === \"GET\"){\n    //data is query string for get\n    options.url += \"?\" + toQueryString(options.data);\n  }\n\n  request.open(options.method, options.url, true);\n  request.onload = e => {\n    //NB: Triggered when request.readyState === XMLHttpRequest.DONE ===  4\n    if (request.status === 200) {\n      options.success(request.response);\n    } else {\n      options.error(request.response);\n    }\n  };\n\n  request.send(JSON.stringify(options.data));\n};\n\n//helper methods\ntoQueryString = obj => {\n  let result = \"\";\n  for(let prop in obj){\n    if (obj.hasOwnProperty(prop)){\n      result += prop + \"=\" + obj[prop] + \"&\";\n    }\n  }\n  return result.substring(0, result.length - 1);\n};\n\nregisterDocReadyCallback = func => {\n  if(!_docReady){\n    _docReadyCallbacks.push(func);\n  } else {\n    func();\n  }\n};\n\ngetNodesFromDom = selector => {\n  const nodes = document.querySelectorAll(selector);\n  const nodes_array = Array.from(nodes);\n  return new DomNodeCollection(nodes_array);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  _docReady = true;\n  _docReadyCallbacks.forEach( func => func() );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 0\n// module chunks = 0","class DomNodeCollection {\n  constructor(nodes) {\n    // The nodes passed in must always be an Array. NodeList has no\n    // #forEach method, so we need to be able to count on the type of\n    // `nodes` so that we can prevent TypeErrors later on. We therefore\n    // must ensure we only pass the `DomNodeCollection` constructor\n    // Arrays in our core function.\n    this.nodes = nodes;\n  }\n\n  each(cb) {\n    // Our each passes in the node and index in traditional 'forEach' order,\n    // jquery passes in index first and binds the call to the element.\n    this.nodes.forEach(cb);\n  }\n\n  on(eventName, callback) {\n    this.each(node => {\n      node.addEventListener(eventName, callback);\n      const eventKey = `jqliteEvents-${eventName}`;\n      if (typeof node[eventKey] === \"undefined\") {\n        node[eventKey] = [];\n      }\n      node[eventKey].push(callback);\n    });\n  }\n\n  off(eventName) {\n    this.each(node => {\n      const eventKey = `jqliteEvents-${eventName}`;\n      if (node[eventKey]) {\n        node[eventKey].forEach(callback => {\n          node.removeEventListener(eventName, callback);\n        });\n      }\n      node[eventKey] = [];\n    });\n  }\n\n  html(html) {\n    if (typeof html === \"string\") {\n      this.each(node => node.innerHTML = html);\n    } else {\n      if (this.nodes.length > 0) {\n        return this.nodes[0].innerHTML;\n      }\n    }\n  }\n\n  empty() {\n    this.html('');\n  }\n\n  append(children) {\n    if (this.nodes.length === 0) return;\n\n    if (typeof children === 'object' &&\n        !(children instanceof DomNodeCollection)) {\n      // ensure argument is coerced into DomNodeCollection\n      children = $l(children);\n    }\n\n    if (typeof children === \"string\") {\n      this.each(node => node.innerHTML += children);\n    } else if (children instanceof DomNodeCollection) {\n      // You can't append the same child node to multiple parents,\n      // so we must duplicate the child nodes here.\n      this.each(node => {\n        // The argument to cloneNode indicates whether or not\n        // all children should be cloned.\n        children.each(childNode => {\n          node.appendChild(childNode.cloneNode(true))\n        });\n      })\n    }\n  }\n\n  remove() {\n    this.each(node => node.parentNode.removeChild(node));\n  }\n\n  attr(key, val) {\n    if (typeof val === \"string\") {\n      this.each( node => node.setAttribute(key, val) );\n    } else {\n      return this.nodes[0].getAttribute(key);\n    }\n  }\n\n  addClass(newClass) {\n    this.each(node => node.classList.add(newClass));\n  }\n\n  removeClass(oldClass) {\n    this.each(node => node.classList.remove(oldClass));\n  }\n\n  toggleClass(toggleClass) {\n    this.each(node => node.classList.toggle(toggleClass));\n  }\n\n  find(selector) {\n    let foundNodes = [];\n    this.each(node => {\n      const nodeList = node.querySelectorAll(selector);\n      foundNodes = foundNodes.concat(Array.from(nodeList));\n    });\n    return new DomNodeCollection(foundNodes);\n  }\n\n  children() {\n    let childNodes = [];\n    this.each(node => {\n      const childNodeList = node.children;\n      childNodes = childNodes.concat(Array.from(childNodeList));\n    });\n    return new DomNodeCollection(childNodes);\n  }\n\n  parent() {\n    const parentNodes = [];\n\n    this.each(({ parentNode }) => {\n      // we apply 'visited' property to prevent adding duplicate parents\n      parentNode.visited ? parentNodes.push(parentNode) : parentNode.visited = true;\n    });\n\n    parentNodes.forEach(node => {\n      node.visited = false;\n    });\n    return new DomNodeCollection(parentNodes);\n  }\n}\n\nmodule.exports = DomNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}